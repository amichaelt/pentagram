
Savegame format:

char id[17]    "PentagramSavegame"
uint32 count   number of files
[count files]

each file:
uint16 namelen         size of name of this file
char name[namelen]     name of this file
uint32 datalen         size of this file
uint8 data[datalen]    data




Savegame files:

global version 1-in-progress:

VERSION: Savegame version
GAMEINFO: GameInfo
DESCRIPTION: Description
KERNEL: Processes
OBJECTS: Objects (includes currently loaded items, gumps)
WORLD: World data (currently current map, ethereal items)
MAPS: Maps ('nonfixed' data)
CURRENTMAP: fast area
UCGLOBALS: Globals
UCSTRINGS: Strings
UCLISTS: Lists
APP: GUIApp/CoreApp data
maybe more metadata (screenshot, time/date, ...)
pentagram version (current, and starting?)



VERSION: (unversioned)
uint16 version		global savegame version

APP: (v1)
uint16 version
uint8 avatarInStasis (boolean)
sint32 timeOffset (FIXME!)
uint16 avatarMoverProcess (pid)
sint16 palette_transform_matrix[12]
uint16 inversion

KERNEL: (v1)
uint16 version			kernel savegame version
uint32 framenum
idMan pids
uint32 processcount
[processcount processes, from front to back of list]

see below for individual process descriptions

idMan: (v1)
uint16 begin
uint16 end
uint16 max_end
uint16 startcount
uint16 usedcount
uint16 unused[]
uint16 terminator (0)

OBJECTS: (v1)
uint16 version			objects savegame version
idMan objIDs
idMan actorIDs
[...objects...]
uint16 terminator (0)

see below for individual object descriptions


WORLD: (v1)
uint16 version
uint32 mapnum
uint16 egghatcher
uint32 etherealcount
[etherealcount uint16s, bottom of the stack first]


MAPS: (v1)
uint16 version
uint32 mapcount
[mapcount maps, stored in order from 0-<mapcount-1>]

each map:
uint32 itemcount
[itemcount items]


CURRENTMAP: (v1)
uint16 version
uint32[MAP_NUM_CHUNKS][MAP_NUM_CHUNKS/32] fast


UCSTRINGS: (v1)
uint16 version
idMan stringIDs
uint32 stringcount
[stringcount strings]

each string:
uint16 id
uint32 length
char str[length]	the actual string (not NULL terminated)


UCGLOBALS: (v1)
uint16 version
uint32 size		size in bits
uint8 data[bytes]	"bytes" = size/8, rounded up


UCLISTS: (v1)
uint16 version
idMan listIDs
uint32 listcount
[listcount lists]

each list:
uint16 id
uint32 elementsize
uint32 size
uint8 data[size*elementsize]


Individual Objects:
--------------------

each object: (v1)
uint16 classlen			size of classname
char classname[classlen]	class name of this Object
[data for this object (see below)]



Object: (unversioned)
uint16 objid

Item: (v1)
uint16 version
<Object>
uint16 extendedflags
uint16 flags
uint16 shape, frame
uint16 x,y,z
uint16 quality, npcnum, mapnum
if (objid != 0xFFFF) uint16 gump, gravity_pid
if (ETHEREAL && (CONTAINED || EQUIPPED)) uint16 parent

Container: (v1)
uint16 version
<Item>
uint32 contentcount
[contentcount Objects]


Actor: (v1)
uint16 version
<Container>
sint16 str, dex, int
uint16 hp
sint16 mana
uint16 alignment, enemyalignment
uint16 lastanim, animframe, direction
uint32 actorflags
TODO: more...?

MainActor: (v1)
uint16 version
<Actor>
uint8 justTeleported (boolean)
sint32 accumStr, accumDex, accumInt
TODO: more...?


Egg: (v1)
uint16 version
<Item>
uint16 hatched (boolean)

MonsterEgg: (v1)
uint16 version
<Item>

TeleportEgg: (v1)
uint16 version
<Egg>

GlobEgg: (v1)
uint16 version
<Item>

Gump: (v1)
uint16 version
<Object>
uint16 owner
sint32 x
sint32 y
sint32 dims.x
sint32 dims.y
sint32 dims.w
sint32 dims.h
uint32 flags
sint32 layer
sint32 index
uint16 shapeFlexId
uint32 shapenum
uint32 framenum
uint16 focus_child.objid
uint16 notifier
uint32 process_result
uint32 childcount
[childcount gumps, in order]


DesktopGump: (v1)
uint16 version
<Gump>


GameMapGump: (v1)
uint16 version
<Gump>


ConsoleGump: (v1)
uint16 version
<Gump>


ItemRelativeGump: (v1)
uint16 version
<Gump>


AskGump: (v1)
uint16 version
<ItemRelativeGump>
UCList list


BarkGump: (v1)
uint16 version
<ItemRelativeGump>
sint32 counter
uint16 textwidget


ContainerGump: (v1)
uint16 version
<ItemRelativeGump>
sint32 itemarea.x
sint32 itemarea.y
sint32 itemarea.w
sint32 itemarea.h


PaperdollGump: (v1)
uint16 version
<ContainerGump>
uint16 statbuttongump


MiniStatsGump: (v1)
uint16 version
<Gump>


TextWidget: (v1)
uint16 version
<Gump>
sint32 fontnum
sint32 current_start
sint32 current_end
sint32 targetwidth
sint32 targetheight
sint16 textalign
uint32 strlen
char text[strlen]


ButtonWidget: (v1)
uint16 version
<Gump>
uint16 shape_upFlexId
uint32 shape_upNum
uint32 framenum_up
uint16 shape_downFlexId
uint32 shape_downNum
uint32 framenum_down
uint16 textwidget
uint8 mouseOver (boolean)

SlidingWidget: (v1)
uint16 version
<Gump>


Individual Processes:
-----------------------
each process: (v1)
uint16 classlen			size of classname
char classname[classlen]	class name of this Process
[saved data from this process]



Process (v1)
uint16 version
uint16 pid
uint8 active (boolean)
uint8 suspended (boolean)
uint8 terminated (boolean)
uint8 terminate_deferred (boolean)
uint16 item_num
uint16 type
uint32 result
uint32 waitingcount
uint16 waiting[waitingcount]


ActorAnimProcess: Process (v1)
uint16 version
<Process>
uint8 firstframe (boolean)
uint8 animAborted (boolean)
uint8 attackedSomething (boolean)
uint8 dir
uint16 action
uint16 repeatcounter
uint8 hasTracker (boolean)
if (hasTracker) AnimationTracker tracker

AnimationTracker (v1)
uint16 version
uint32 startframe, endframe
uint8 firstframe (boolean)
uint32 currentframe
uint16 actor
uint8 dir
uint32 shapenum
uint32 action
uint32 prevx, prevy, prevz
uint32 x,y,z
uint16 mode
if (mode == TargetMode) uint32 target_dx, target_dy
uint8 firststep (boolean)
uint8 flipped (boolean)
uint32 shapeframe
uint8 done (boolean)
uint8 blocked (boolean)
uint8 supported (boolean)


TargetedAnimProcess: Process (v1)
uint16 version
<ActorAnimProcess>
uint32 x,y,z


CameraProcess: Process (v1)
uint16 version
<Process>
sint32 sx, sy, sz
sint32 ex, ey, ez
sint32 time, elapsed
uint16 itemnum
uint32 last_framenum
static sint32 earthquake
static sint32 eq_x, eq_y


MusicProcess: Process (v1)
uint16 version
<Process>
sint32 wanted_track


UCProcess: Process (v1)
uint16 version
<Process>
uint16 bp
uint16 classid
uint16 ip
uint32 temp32
uint32 freecount
(uint16,sint32) freeonterminate[freecount]
UCStack stack

UCStack: (v1)
uint16 version
uint32 size
uint32 SP
uint8 data[size-SP]



GumpNotifyProcess: Process (v1)
uint16 version
<Process>
uint16 gump


DelayProcess: Process (v1)
uint16 version
<Process>
sint32 count


GravityProcess: Process (v1)
uint16 version
<Process>
sint32 gravity
sint32 xspeed, yspeed, zspeed


MissileProcess: Process (v1)
uint16 version
<Process>
sint32 from_x, from_y, from_z
sint32 to_x, to_y, to_z
sint32 speed, currentpos
uint8 curve (boolean)


SpriteProcess: Process (v1)
uint16 version
<Process>
sint32 frame
sint32 first_frame, last_frame
sint32 repeats
sint32 delay, delay_counter


TeleportToEggProcess: Process (v1)
uint16 version
<Process>
sint32 mapnum
sint32 teleport_id


PaletteFaderProcess: Process (v1)
uint16 version
<Process>
sint32 priority
sint32 counter, max_counter
sint16 old_matrix[12]
sint16 new_matrix[12]


AvatarMoverProcess: Process (v1)
uint16 version
<Process>

QuickAvatarMoverProcess: Process (v1)		terminates after loading
uint16 version
<Process>
sint32 dir


ResurrectionProcess: Process (v1)
uint16 version
<Process>


DeleteActorProcess: Process (v1)
uint16 version
<Process>


ClearFeignDeathProcess: Process (v1)
uint16 version
<Process>


SplitItemProcess: Process (v1)
uint16 version
<Process>
uint16 target


PathfinderProcess: Process (v1)
uint16 version
<Process>
uint16 targetitem
if (!targetitem) uint16 targetx, targety, targetz
uint16 currentstep
uint16 pathsize
(uint16 action,uint16 direction) path[pathsize]


LoiterProcess: Process (v1)
uint16 version
<Process>


AvatarDeathProcess: Process (v1)
uint16 version
<Process>


CombatProcess: Process (v1)
uint16 version
<Process>
uint16 target


GrantPeaceProcess: Process (v1)
uint16 version
<Process>
uint8 havetarget (boolean)


FireballProcess: Process (v1)
uint16 version
<Process>
sint32 xspeed, yspeed
uint16 target
uint16 tail[3]
uint16 age


HealProcess: Process (v1)
uint16 version
<Process>
uint16 healCounter
uint16 hungerCounter


InverterProcess: Process (v1)
uint16 version
<Process>
uint16 targetstate
