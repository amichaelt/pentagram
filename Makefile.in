SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = .

ACLOCAL = aclocal
AUTOCONF = autoconf
AUTOHEADER = autoheader

CP := cp
CXX := @CXX@
MKDIR := @MKDIR@
RM := @RM@
EXEEXT := @EXEEXT@
EMPTY_FILE := @EMPTY_FILE@

DEPDIR := .deps
SDL_CFLAGS := @SDL_CFLAGS@
SDL_LIBS := @SDL_LIBS@
CXXFLAGS += -g @CXXFLAGS@ @DEFS@ @PROFILE@ -DDATA_PATH=\"@DATAPATH@\"
LDFLAGS += @LIBS@ @PROFILE@
WARNINGS := @WARNINGS@

# List of all submodules
# The order is important, be careful if you change it
MODULES := convert convert/u8 convert/crusader misc filesys \
	tools tools/disasm tools/compile tools/flexpack tools/fold \
	tools/shapeconv \
	kernel games graphics graphics/fonts audio audio/midi \
	audio/midi/timidity usecode world world/actors gumps \
	gumps/widgets conf .

# GCC 3.4+ precompiled header
ifeq (@USE_PCH@,yes)
PCHEADER := misc/pent_include.h.gch
else
PCHEADER :=
endif

# look for include files in
#   each of the modules
CXXFLAGS += $(patsubst %,-I$(top_srcdir)/%,$(MODULES)) -I.

# config.h will be in $(top_builddir)/misc
CXXFLAGS += -I$(top_builddir)/misc

# list of all .deps subdirs
DEPDIRS = $(patsubst %,%/$(top_builddir)/$(DEPDIR),$(MODULES))

# Default target. The dependencies are added by the module.mk files
all:

# Clean all object files & binaries
clean: clean-pch

# Clean *all*
distclean: clean
	-$(RM) -r $(DEPDIRS)

ifeq (@USE_PCH@,yes)
clean-pch:
	-$(RM) $(PCHEADER)
else
clean-pch:
endif

# Include additional rules for each module
include $(patsubst %,$(top_srcdir)/%/module.mk,$(MODULES))

# Create .deps subdirs if missing. We do not do this directly, but rather
#via a file inside the .deps dir. The reason for this is that otherwise, the
#mod date of the .deps dir will change whenever a new file is created in it,
#causing all source files to be rebuilt - ouch!
$(DEPDIRS):
	-$(MKDIR) $(@D)
	touch $@

# cancel any built-in .cpp->.o rules
%.o: %.cpp

# custom compile rule which calculates dependencies
%.o: %.cpp $(PCHEADER)
	@$(MKDIR) $(*D)/$(DEPDIR)
	$(CXX) -Wp,-MMD,"$(*D)/$(DEPDIR)/$(*F).d",-MQ,"$@",-MP $(WARNINGS) $(CXXFLAGS) $(SDL_CFLAGS) -c -o $@ $<

# custom compile rule for the precompiled header
%.h.gch: %.h
	@$(MKDIR) $(*D)/$(DEPDIR)
	$(CXX) -Wp,-MMD,"$(*D)/$(DEPDIR)/$(*F).h.gch.d",-MQ,"$@",-MP $(WARNINGS) $(CXXFLAGS) $(SDL_CFLAGS) -x c++-header -c $<


# rule to rebuild Makefile if necessary
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_HEADERS= CONFIG_LINKS= \
	  CONFIG_FILES=$@ $(SHELL) ./config.status

# rules to rebuild configure, config.status, aclocal.m4
$(top_builddir)/config.status: $(srcdir)/configure
	$(SHELL) ./config.status --recheck
$(srcdir)/configure: $(srcdir)/configure.ac $(top_srcdir)/aclocal.m4
	cd $(srcdir) && $(AUTOCONF)
$(top_srcdir)/aclocal.m4: $(srcdir)/configure.ac
	cd $(srcdir) && $(ACLOCAL)
# fixme: rebuilding misc/config.h.in and misc/config.h

.PHONY: all clean distclean clean-pch
