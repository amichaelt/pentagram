2006-07-16  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* audio/AudioProcess.*: console commands for SFX debugging

2006-07-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/ConsoleGump.cpp: only show notification console in debug mode

2006-07-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* acinclude.m4: fix error message for missing SDL_ttf
	* world/Item.h, kernel/HIDManager.h: fix gcc 4.1 build

2006-07-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*: check line of sight to top-most item in canReach
	* world/Container.cpp: ignore weight of keys on keyring

2006-07-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp: add missing loader for AmbushProcess

2006-07-04  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/CoreApp.cpp: use ~/Library/Application Support/Pentagram for
	  @home on Mac OS X
	* system/xcode/*: embed the frameworks into the application bundle and
	  add instructions for obtaining the required frameworks

2006-06-24  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* system/desktop/*: move icons to new directory

2006-05-29  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* graphics/TexturePNG.cpp:repack RGBA on pngs to fix ppc
	* data/pentagram.png, data/pentagram.icns: image & icons for pentagram

2006-05-28  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/CoreApp.cpp: use the application resource path for @data in
	  Mac OS X
	* misc/common_types.h: do not define basic types if already declared
	* misc/pent_include.h: include macosx_include.h if __APPLE__ defined
	* system/xcode/*: Xcode project files and other OS X specific sources

2006-05-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.cpp: fix line-of-sight checks for plaques hanging on walls
	* kernel/CoreApp.cpp: allow remorse gametype-override in config file

2006-05-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* audio/SonarcAudioSample.cpp: don't assume signed char (bug #1488390)

2006-05-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/ContainerGump.cpp: fix container range check

2006-04-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp: fixing crusader call opcode semantics
	* world/Item.*: get_QHi, get_QLo intrinsics
	* graphics/TypeFlags.cpp: crusader editor itemflag
	* usecode/UCMachine.cpp: fix stacksize for crusader loop opcodes
	* various: crusader intrinsics

2006-04-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/RemorseGame.*: very incomplete No Remorse Game class
	* games/GameData.*: load some No Remorse data files
	* world/*: crusader map loading
	* usecode/remorseintrinsics.h: empty intrinsics table
	* various: hacks to disable some pentagram functions in crusader
	* data/u8bindings.ini, kernel/GUIApp.cpp: fix typo in keybinding

2006-04-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: crusader anim.dat, wpnovlay.dat, typeflag.dat loading
	* usecode/*: clean up handling of headers; crusader usecodeflex support

2006-04-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: renamed @u8 virtual path to @game
	* CoreApp.h: add defines for which game is running, e.g., GAME_IS_U8
	* world/actors/AnimAction.h: 'special' is flag for frames, not actions

2006-04-28  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.cpp: prevent line-of-sight test from going between walls
	  by using a 2x2x2 sweeptest instead of a 0x0x0 one

2006-04-28  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp, kernel/HIDManager.cpp: F5 toggles console as well

2006-04-24  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* acinclude.m4: rewrote SDL check to be more cross-compile-friendly

2006-04-21  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* acinclude.m4: check for SDL_ttf >= 2.0.7
	* acinclude.m4: ignore HOST_CC and SAVED_CC in CC_FOR_BUILD check

2006-04-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/encoding.cpp: keep @ character as-is
	* world/graphics/TTFont.*: scan for character to use as bullet

2006-04-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Animation.h: renamed some animation names
	* world/actors/LoiterProcess.*: support limited number of loiter steps
	* world/actors/ActorAnimProcess.cpp: change meaning of animation dir 8
	  to the current direction at the time the animation actually starts
	* world/actors/*: use direction 8 where appropriate
	* world/actors/AmbushProcess.*: process waiting for avatar to approach
	* world/actors/CombatProcess.cpp: idle between attacks occasionally
	* world/actors/CombatProcess.cpp: shifters ambush avatar
	* *: savegame version increased to 3

2006-03-19  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/BarkGump.cpp: determine text speed by 'textdelay' setting
	* world/CurrentMap.cpp: fix scanForValidPosition diagonal scan dirs

2006-03-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/BookGump.cpp, gumps/ScrollGump.cpp: adjusted text rectangles
	* gumps/GameMapGump.cpp: don't do range checks for talking to NPCs

2006-03-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/Font.*: added line-breaking rules for Japanese
	* graphics/fonts/FontManager.*: removed unnecessary sjis field in TTFId
	* graphics/fonts/Font.*: properly handle spaces before too long lines

2006-03-16  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*: add Item::canMergeWith function that determines if two
	  Items can be merged together. Check for earth reagents with
	  different frames.

2006-03-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/Gump.*: add rounding-style parameters to coordinate conversion
	  functions
	* gumps/Gump.*: use screenspace in PaintCompositing/PaintComposited to
	  avoid rounding errors

2006-03-14  Ryan Nunn <colourles@users.sourceforge.net>
	* system\msvc\*, misc\pent_include.h : Visual C++ 2005 Express Projects
	  for building Pentagram 
	* misc\Console.cpp, graphics\SoftRenderSurface.inl : Fixing up some 
	  compiling probs
	* graphics/SoftRenderSurface.cpp : Added CHECK_ALPHA_FILLS define for
	  SoftRenderSurface::FillAlpha() to enable some checking of what is 
	  happening with the alpha filling.
	  
2006-03-09  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/FontManager.cpp: added ttf_highres option to ini
	* graphics/fonts/Font.cpp: added isHighRes() function

2006-03-06  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* audio/SpeechFlex.cpp: convert tabs to spaces before comparing strings
	* world/actors/AvatarMoverProcess.cpp: don't stand up when in stasis

2006-03-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/*: removed separate SJIS version of typesetText,
	  allow TTF support for Japanese text.
	* misc/encoding.*: SJIS to unicode conversion

2006-03-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/widget/TextWidget.cpp: adjust TextWidget width,height
	  to mixed-scale rendering

2006-03-05  Ryan Nunn <colourles@users.sourceforge.net>
	* Most files : Improved support for Mixed Scale rendering as outlined
	  in the email i sent to the Dev mailing list (when it get through...).
	  Mostly means TTF fonts wont overlap on top of scaled gumps anymore.
	* graphics\scalers\BilinearScalerInternal_Arb.cpp : Fixing 2x
	  downscaling
	* graphics\PNGWriter.cpp, graphics\TexturePNG.cpp : MSVC fixes
	* graphics\*RenderSurface.* : Added RenderSurface::PaintMasked()
	  function to allow correct painting of shapes in
	  Gump::PaintComposited() methods as it might be useful.

2006-03-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* data/u8japanese.ini: Japanese books/scrolls have red text

2006-03-03  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/PNGWriter.*: PNG writing
	* gumps/GameMapGump.cpp: dumpMap now writes a PNG file

2006-03-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/JP*, graphics/PaletteManager.*:coloured Japanese fonts

2006-03-01  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/GameMapGump.cpp: check weight/volume when dragging onto Avatar
	* world/Item.cpp: don't make FAST_ONLY items disappear from containers
	* world/actors/HealProcess.cpp: heal instead of harm when eating
	* gumps/ContainerGump.cpp: don't let item combine with itself

2006-02-28  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* data/*.png: art for the main menu
	* gumps/PentagramMenuGump.*, gumps/widget/GameWidget.cpp: display art
	* games/GameInfo.*, gumps/widget/GameWidget.cpp: display game version

2006-02-28  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/TexturePNG.*: PNG reading
	* configure.ac, Makefile.mingw: check for and use libpng

2006-02-27  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* audio/midi/ALSAMidiDriver.cpp: clear event structure before use

2006-02-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/pent_valgrind.h: more stub defines
	* kernel/SegmentedPool.*: make valgrind aware of the SegmentedPool

2006-02-26  Ryan Nunn <colourles@users.sourceforge.net>
	* world/FireballProcess.cpp : Resolving ambiguity with sqrt function
	* filesys/IDataSource.h : Improving IFileDataSource::eof() method

2006-02-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* configure.ac, misc/pent_valgrind.h: add --enable-valgrind switch
	  to include valgrind/memcheck.h in pent_include.h.
	* filesys/SavegameWriter.cpp: let valgrind check data before saving it

2006-02-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Actor.cpp: uninitialized variables

2006-02-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* ALL: converted from CVS to subversion repository

2006-02-18  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/GUIApp.cpp, kernel/Joystick.*: load JoystickCursorProcess
	  properly

2006-02-16  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/*Font.*: temporary fix for japanese crash

2006-02-12  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/GUIApp.*: setMouseCoords function to allow other methods of
	  moving the cursor
	* kernel/Joystick.*: JoystickCursorProcess to move the cursor using
	  a joystick

2006-02-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* data/u8monsters.ini, world/actors/MonsterInfo.h:
	  add booleans for ranged attacks, shapeshifting
	* kernel/Kernel.cpp: don't terminate processes that are TERM_DEFERRED
	* world/actors/ResurrectionProcess.cpp: go into combat mode after res.

2006-02-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/ReadableGump.*: handle Japanese plaques/graves

2006-02-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Map.cpp: handle teleport to missing map more gracefully

2006-02-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/SKFPlayer.cpp: increased width of subtitle area
	* graphics/fonts/JPFont.*, graphics/fonts/JPRenderedText.*:
	  unfinished implementation of japanese font support. No colour yet.
	* graphics/fonts/FontManager.*: japanese font overrides
	* data/u8japanese.ini: japanese font overrides
	* games/GameInfo.*: separately specify language letter for usecode file
	* misc/encoding.*: shift_jis to Ultima 8's font encoding converter
	* games/gamemd5.h: jusecode.flx md5

2006-02-12	Darke  <darkepaw@users.sf.net>
	* tools/disasm/*: Minor change to support u8jp.

2006-02-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/GameInfo.*: add GAMELANG_JAPANESE
	* games/GameDetector.cpp: presence of jusecode.flx means Japanese

2006-02-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.cpp: display warning when avatar falls below Z=0

2006-02-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* docs/u8bugs.txt: map bug: holes in floor in U8 map 62
	* world/Map.cpp: workaround for these holes
	* usecode/UCMachine.cpp: only apply workaround for usecode bug in U8

2006-02-09  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/CurrentMap.cpp: fixed sign bug which caused the avatar to
	  move into walls occasionally

2006-02-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* tools/data2c/data2c.c: make output valid C++
	* kernel/GUIApp.cpp: don't pass unicode control chars to OnTextInput

2006-01-19	Darke  <darkepaw@users.sf.net>
	* convert/Convert.h, tools/fold/*: Added 0x32 (and) and 0x36 (ne)
	  in fold.
	* tools/fold/*: Fixed spawn opcode (testing value==0 in if statement,
	  then relying on value!=0 within if statement makes no sense and is
	  surprisingly difficult to track down...).
	
2006-01-18	Darke  <darkepaw@users.sf.net>
	* tools/fold/*: fixed the fact it didn't work since last time I made
	  a commit a year ago. It would appear it works now for the first
	  usecode funcs for remorse and regret. Hopefully it'll take me less
	  then a year to fix this so more works. *grin*

2005-12-24  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AvatarMoverProcess.cpp: properly stop walking/running
	  even if in stasis
	* gumps/GameMapGump.cpp: fix mapdump area check

2005-12-21  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/GameMapGump.cpp: some byteorder fixes for mapdumping (by Ryan)

2005-12-20  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/GameMapGump.cpp: experimental dumping of map to tga file

2005-12-19  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Process.cpp: disable cascading process failure
	* world/CurrentMap.cpp: allow areasearch around item in container
	* audio/SpeechFlex.cpp: clean up and fix speech flex text parser

2005-12-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.*: fixed off-by-one click handling bug

2005-11-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.*: increased savegame version to 2. Version 1 is
	  no longer supported. From this point on, don't change savegame format
	  without increasing version number and implementing backward
	  compatibility.
	* gumps/U8SaveGump.cpp: renumbered savegame filenames to make them
	  match entry numbers in the gump

2005-11-03  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/MainActor.*: Cheat::toggleInvincibility

2005-11-01  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AnimationTracker.cpp: fixed unsupported animations

2005-10-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/CurrentMap.cpp: fix block check in scanForValidPosition

2005-10-24  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/PentagramMenuGump.cpp: skip unknown games

2005-10-23  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp: gumps get mouseover events if mouse is over child
	* gumps/MenuGump.cpp: don't enter save screen if game over
	* gumps/PentagramMenuGump.*: small temporary improvement to scrolling
	* kernel/GUIApp.cpp: hide console in menu

2005-10-23  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/widgets/GameWidget.*: widget used for game selection
	* gumps/PentagramMenuGump.*: unfinished pentagram game selection menu
	* gumps/widgets/TextWidget.*: allow using non-game truetype fonts
	* various: using new TextWidget construction syntax

2005-10-21  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/U8SaveGump.cpp: properly wrap lines in load mode
	* world/actors/GrantPeaceProcess.cpp: correctly check if target is dead

2005-10-20  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/*App.*: refactored GameInfo/gamename use. Current game is
	  now stored in GameInfo* CoreApp::gameinfo, which has a 'name' field
	  for the name of the game. The (pointers to) GameInfo objects for
	  all configured games are stored in a std::map in CoreApp.
	* world/actors/MainActor.*: cheat::heal console command

2005-10-06  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AvatarMoverProcess.*: adjust direction/size of steps
	* world/AnimationTracker.cpp: allow small adjustments of avatar anims
	* world/actors/AvatarMoverProcess.cpp: don't move while falling
	* world/actors/AvatarMoverProcess.*: never balance when walking/running

2005-10-05  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* games/*bindings.*, kernel/HIDBinding.h: Removed useless files

2005-10-05  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/Mouse.*, kernel/Joystick.*, kernel/HIDManager.*,
	  kernel/GUIApp.*, games/*bindings.*: removed hidbindings in favor of
	  console commands
	* kernel/HIDKeys.*: modifier keys are bindable and events added
	* data/u8bindings.ini: use new console command based bindings
	* gumps/ControlsGump.*, gump/BindGump.*: broken - to be fixed and/or
	  replaced
	* misc/Console.*: removed ArgsType from console command function
	  typedef and use the function instead of the string to remove a
	  console command
	* various: updated console commands to match new function typedef
	* more various: create console commands to replace old HIDBindings

2005-09-24  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* misc/util.*: Added utility function ArgvToString
	* kernel/HIDKeys.*: functions to deal with the naming of keys and
	  translation from SDL events

2005-08-28  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/ItemFactory.*: give createItem/createActor the option of
	  assigning an objid.
	* gumps/ContainerGump.cpp: minor cleanup of drag/drop code
	* gumps/ContainerGump.*: don't try to drop container into itself

2005-08-27  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Container.*: don't let moveItemToEnd add item
	* kernel/GUIApp.cpp, world/Item.*: stealing checks
	* world/Item.cpp: AvatarStoleSomething is event 0x13, not 0x14
	* world/Item.cpp: set OWNED flag if adding to avatar
	* world/Item.h: clarify meaning of OWNED flag

2005-08-27  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.h: s/getGameMapMapGump/getGameMapGump/
	* various: minor cleanup

2005-08-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/GameInfo.cpp: don't show version,md5 for 'pentagram menu' game

2005-08-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/widgets/SlidingWidget.cpp: don't give SlidingWidget a
	  GumpNotifyProcess
	* module.mk, Makefile.in: include objects.mk before the module.mk files
	* gumps/GumpNotifyProcess.*: specialized dumpInfo()

2005-08-17  Ryan Nunn <colourles@users.sourceforge.net>
	* gumps/Gump.cpp: Removed Virtual Function call from Gump destructor.
	* graphics/RenderSurface.h, graphics/SoftRenderSurface.*, 
	  graphics/XFormBlend.h : New 'alpha_blend' argument to Blit and 
	  FadedBlit methods. Quite simply it will blend the texture using the 
	  alpha channel of the texture.
	* graphics/fonts/FontManager.*, graphics/fonts/TTFRenderedText.cpp,
	  graphics/fonts/TTFont.*, kernel/GUIApp.cpp : Added Antialiased
	  TTF support. Default is enabled, controlled using ini option
	  "ttf_antialiasing=yes/no"

2005-07-31  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/GameDetector.cpp: set version to 999 if custom usecode found
	* games/gamemd5.h: move table to Pentagram namespace
	* world/actors/MainActor.cpp: only show weapon if in combat
	* world/actors/AvatarMoverProcess.cpp: limit jump distance

2005-07-31  Ryan Nunn <colourles@users.sourceforge.net>
	* games/GameInfo.cpp : Fixing problem with save game version being 0 
	  when loaded. Problem was the version argument for the load function 
	  was being used instead of the GameInfo::version member variable

2005-07-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AvatarMoverProcess.cpp: don't let left-clicks for
	  a running jump be ignored when busy waiting for animation to finish

2005-07-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/md5.*: md5 computation code
	* games/Game{Info,Detector}.*: compute md5 when detecting a game.
	* games/GameInfo.*: cleanup
	* kernel/GUIApp.cpp: store GameInfo in savegame and check when loading
	* games/gamemd5.h: list of MD5 hashes of usecode files
	* games/GameDetector.cpp: use MD5 to identify game

2005-07-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/World.cpp, world/actors/Actor.*: added extra fields from
	  npcdata.dat to pentagram savegames, for future use.

2005-07-27  Ryan Nunn <colourles@users.sourceforge.net>
	* convert/ConvertShape.*, convert/crusader/ConvertShapeCrusader.cpp,
	  convert/u8/ConvertShapeU8.* : Added ability to load 'CMP' shapes 
	  using ConvertShape
	* tools/shapeconv/ShapeConv.cpp : Updated to support reading 
	  u8shapes.cmp
	* games/GameData.*, graphics/ShapeArchive.cpp, graphics/ShapeFrame.* :
	  Updated to support decompressing u8shapes.cmp at runtime. Also 
	  changed things so Pentagram will attempt to read u8shapes.flx,
	  shapes.flx and u8shapes.cmp (in that order)
	* convert/ConvertShape.cpp, graphics/Shape.cpp : Support loading of
	  the munged U8 Spanish gumps
	* convert/ConvertShape.*, tools/shapeconv/ShapeConv.cpp : Made Check 
	  functions static members of ConvertShape

2005-07-27  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* acinclude.m4: wrote custom SDL_ttf configure check PENT_CHECK_SDLTTF
	* configure.ac, common.mk, Makefile.in, */module.mk:
	  split targets into GUI and console apps. Don't link console apps
	  against SDL and audio libs.
	* module.mk, tools/compile/llc.cpp: fix llc build, but keep disabled

2005-07-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/{Core,Con,GUI}App.*: removed Kernel from CoreApp
	* object.mk, */module.mk: adapt object list to new CoreApp
	* kernel/{Core,Con,GUI}App.*: move SDL init from CoreApp to GUIApp

2005-07-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/ActorAnimProcess.cpp: fix teleports while moving

2005-07-26  Ryan Nunn <colourles@users.sourceforge.net>
	* world/ItemSorter.cpp : Adjusting sorting so if 2 items overlap in all
	  3 world coords then the one with the highest top z should be drawn as
	  top. Fixes up the problem with Mythrans book not being visable.

2005-07-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Pathfinder.*: use advance animations instead of walks in
	  combat mode; try attack anim to see if target reached
	* world/actors/PathfinderProcess.*, world/actors/CombatProcess.cpp:
	  use new combat Pathfinder
	* world/actors/ActorAnimProcess.cpp:handle hits at start of framerepeat
	* world/actors/AnimationTracker.cpp: fix combat hit checking

2005-07-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: renamed Glob class to MapGlob to prevent confusion with the
	  system header glob.h on case insensitive systems.

2005-07-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Actor.cpp: output actor flags in dumpInfo
	* world/actors/Actor.cpp: don't abort receiveHit if invincible/immortal

2005-07-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* configure.ac: add switches for the gc scalers, all bilinear scalers

2005-07-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/ActorAnimProcess.cpp: fix timing of fall if unsupported
	* world/GravityProcess.*: specialized GravityProcess::dumpInfo()
	* world/actors/AnimAction.h, world/actors/ActorAnimProcess.cpp:
	  guessing at meaning of flag, fixing Torwin's failed leap of faith.

2005-07-09  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* filesys/ZipFile.cpp: fix failed assertion when savegame is corrupt
	* kernel/GUIApp.cpp: clearer message for a corrupt savegame
	* usecode/UCProcess.cpp, usecode/UsecodeFlex.cpp: fix crash in
	  UCProcess::dumpInfo if IP is undefined (classid==0xFFFF)	

2005-07-07  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/midi/LowLevelMidiDriver.cpp : Fixing bad bad bug with the 
	  MidiDriver getting deleted before the thread had finish exiting
	* Various Files: Changing Init and Shutdown messages
	* games/stdbindings.*, kernel/HIDManager.cpp, data/u8bindings.ini :
	  Removed ShowMenu from always being bound to Escape (is now bound in
	  u8bindings.ini). Also F4 is now bound to toggleFullscreen.
	* kernel/GUIApp.cpp, gumps/*.* : Updated things so screen resoultion 
	  can be changed in game. Use GUIApp::setVideoMode and 
	  GUIApp::toggleFullscreen
	* kernel/GUIApp.cpp. gumps/ScalerGump.*: Moved scaler handling from 
	  GUIApp to ScalerGump. Added ability to change scaler at run time.
	  Use ScalerGump::changeScaler and ScalerGump::listScalers.

2005-07-05  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* misc/pent_include.*: fix ifndef for memory allocation functions
	* graphics/Shape.*: use memory management on Shapes

2005-07-04  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* pentagram.cpp: Initialize the MemoryManager before GUIApp starts.
	* kernel/*Allocator.*: add info and ability to free unused pools
	* kernel/CoreApp.*: MemoryManager initialization moved
	* kernel/GUIApp.cpp: MemoryManager console commands
	* kernel/MemoryManager.*: console command and new allocation methods
	* kernel/Object.cpp, kernel/Process.cpp, usecode/UCProcess.*: switch
	  to new allocation method
	* kernel/*Pool.*: added info
	* misc/pent_include.*: added default allocation through malloc and free
	* world/World.cpp: free unused memory resources on map change

2005-07-04  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/midi/* : Sync with Exult
	* graphics/Scaler* : Added 2 new compile options 
	  COMPILE_GAMMA_CORRECT_SCALERS to enable compiling of the GC scalers
	  and COMPILE_ALL_BILINEAR_SCALERS to enable full compiling of the 
	  bilinear scalers (by default 16 bit is not supported and don't 
	  compile all the optimized variants)
	* graphics/TextureTarga.cpp : Fixed up errors with file type detection
	* misc/p_dynamic_cast.h, misc/pent_include.h : Added new 
	  virtual Classname::IsOfType(const char*) method so you can supply a 
	  string to check what a class is (instead having to include the header
	  and use the Classname)
	* filesys/IDataSource.h, /filesys/ODataSource.h, kernel/Process.h, 
	  graphics/Shape.h, audio/AudioProcess.cpp, usecode/UCMachine.cpp : 
	  Getting rid of warnings
	* audio/AudioMixer.* : Made creating and destroying the MidiDriver 
	  independant to AudioMixer
	* kernel/GUIApp.*, pentagram/objects.mk, data/mouse.tga : Added a 
	  'default' mouse cursor for when no gamedata is loaded
	* Everything : Added ability for Pentagram to load without starting a 
	  game and the ability to shutdown and change games. A number of 
	  changes to the way the engine is intialized. Made many changes that 
	  should in theory have separated 'Game' from 'Engine' intializations.
	  The console commands "GUI::changeGame" and "GUIApp::listGames" should
	  be the most relevant command. the "pentagram" game will be used to 
	  drop to the 'coming soon' Pentagram Menu. Currently it just drops to 
	  the console.
	* graphics/fonts/FixedWidthFont.*,  misc/Console.*, kernel/GUIApp.cpp,
	  graphics/*RenderSurface.* : More proper fixed font handling
	* graphics/Texture.* : Change DataSource references to pointers to be
	  consistent with like everything else
	* kernel/CoreApp.cpp, kernel/GUIApp.cpp : Small output message changes
	* data/fixedfont12.ini, data/fixedfont12.tga : A new bigger alternative
	  console font. Put "console_font=@data/fixedfont12.ini" in the 
	  pentagram section of the INI to use it (note it is not included in 
	  the compiled in data)

2005-07-03  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/getObject.h: some (non-class) functions to get an Object,
	  Item, Container, Actor, MainActor or Gump
	* everything: use them
	* games/u8bindings.*, data/u8bindings.ini: remove runExecutionEgg
	* games/U8Game.cpp, gumps/CreditsGump.*: show quotes if watched credits

2005-06-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* system/auto/*: move various aux files from root to system/auto
	* configure.ac, common.mk: look in system/auto

2005-06-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* configure.ac: give summary at the end of configure
	* bootstrap: cleanup
	* graphics/ScalerManager.*: warnings

2005-06-13  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/midi/TimidityMidiDriver.cpp : Report Timidity Error messages
	  if initiliaztion fails
	* audio/midi/FluidSynthMidiDriver.*, audio/midi/MidiDriver.cpp,
	  objects.mk : New FluidSynthMidiDriver borrowed from ScummVM.
	  Needs FluidSynth to work (obviously). Define USE_FLUIDSYNTH_MIDI
	  to compile it in.
	* kernel/GUIApp.cpp, kernel/HIDManager.* : Making it so key bindings 
	  for toggleConsole will always work. (useful for Non-US keyboards)
	  
2005-06-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/CombatProcess.*: clear INCOMBAT flag when terminated
	* games/U8Game.cpp, games/StartU8Process.*: fixed skipstart
	  (music, stasis when restarting)

2005-06-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* audio/midi/various: some changes for exult compatibility

2005-06-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Actor.cpp: make setEquip properly call moveToContainer
	* games/U8Game.cpp: Cheat::equip console cmd for magic armour/weapon
	* gumps/PaperdollGump.cpp: tweak equipment display coordinates
	* gumps/ContainerGump.*: some incomplete weight/volume checks
	* kernel/GUIApp.cpp: renamed MainActor::maxstats to Cheat:maxstats
	* module.mk: basic install rules
	* various: warnings

2005-06-09  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/AudioMixer.cpp : Fixing hard lock
	* audio/midi/XMidiFile.cpp : Continuity from Exult

2005-06-09  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Actor.cpp: sorcery foci treasure
	* data/u8.ini, data/u8monsters.ini: demon treasure

2005-06-07  Ryan Nunn <colourles@users.sourceforge.net>
	* objects.mk, audio/AudioMixer.cpp, audio/midi/*.*, 
	  audio/midi/timidity/timidity.cpp : Update to the Midi System to be
	  the same as what Exult will be
	* graphics/SKFPlayer.cpp : Making 'debug' output only be output in
	  DEBUG builds

2005-06-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AnimationTracker.cpp: set/clear actor's HANGING flag
	* data/u8weapons.ini, world/actors/Actor.cpp: give weapons as treasure

2005-05-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/Gump.h: new FLAG_KEEP_VISIBLE flag for ItemRelativeGumps
	* gumps/ItemRelativeGump.*: keep on screen if FLAG_KEEP_VISIBLE set
	* gumps/BarkGump.cpp, gumps/AskGump.cpp: set FLAG_KEEP_VISIBLE

2005-05-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/ActorBarkNotifyProcess.cpp: don't waitFor animation.
	  This prevents us from getting fail()ed if animation is terminated.

2005-05-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/GameInfo.*: function to get title of current game
	* kernel/GUIApp.cpp: set window title
	* world/DestroyItemProcess.*: can use process result as item to destroy
	* world/CreateItemProcess.*: process that creates an item
	* world/actors/ActorAnimProcess.*: special effects for magic weapons
	* world/Item.cpp: delete FAST_ONLY containers' contents

2005-05-16  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Container.cpp: avatar inventory weight checking

2005-05-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Container.cpp, world/CurrentMap.cpp: when doing recursive
	  searches, return children after parent. Fixes recursive gump closing
	  by usecode.

2005-05-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* Makefile.in: include config.h.stamp into Makefile. This lets make
	  rescan all dependencies when config.h might have been changed by
	  config.status.

2005-05-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/Box.h: a simple 3D box
	* world/Item.*: allow getting 3D bounding box (as a Box)
	* world/action/AnimationTracker.cpp: tweaked hit-checks
	* world/Container.*: volume/capacity checking
	* configure.ac: enable builtin-data by default

2005-05-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/U8SaveGump.cpp: fixed typo that created notifiers in savegump

2005-05-08  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* tools/gimp-plugin/module.mk: Fix building of gimp-plugin

2005-05-08  Ryan Nunn <colourles@users.sourceforge.net>
	* filesys/IDataSource.h : Fixing line end bug on Windows
	* misc/encoding.* : Made reverse_encoding use uint8s because MSVC was
	  complaining about truncated constants
	* world/CameraProcess.cpp : Changing camera scroll speed (slower)

2005-05-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* objects.mk, data/module.mk: moved list of DATA_FILES to objects.mk

2005-05-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/*: InitGump now adds a gump to its parent
	* gumps/ItemRelativeGump.*: don't let gumps open off-screen
	* gumps/ScalerGump.*: change dims.w/h from parent to gump coords

2005-05-07  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/ShapeRenderedText.cpp: adjust cursor position

2005-05-07  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: warnings
	* various: cleaned up output on startup a bit
	* acinclude.m4: use CPPFLAGS instead of CFLAGS in AM_PATH_SDL
	* tools/data2c/*: simple tool to create C header file from data files
	* filesys/FileSystem.*: in-memory files override @data files
	* filesys/data.cpp: load built-in data files ifdef BUILTIN_DATA
	* configure.ac: added --enable-builtin-data option
	* configure.ac: check for both "SDL_ttf.h" and <SDL/SDL_ttf.h>
	* graphics/fonts/TT*: include the SDL_ttf.h as found in configure

2005-05-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/U8Game.*: no longer start with items; use concmd Cheat::items

2005-05-01  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Actor.cpp: fix missing CombatProcess after resurrection
	* world/Item.*, gumps/ContainerGump.cpp: support random gump positions
	* world/actors/Actor.cpp: randomize monster treasure location in gump
	* gumps/GameMapGump.cpp, gumps/PaperdollGump.cpp: random item placement
	* graphics/GumpShapeArchive.cpp: fix gump itemarea loading

2005-05-01  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp, audio/AudioMixer.*: move Audio/MusicProcess
	  creation to GUIApp::newGame
	* kernel/GUIApp.cpp: alt-x = quit

2005-04-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/PagedGump.cpp: give focus to current page
	* gumps/PagedGump.*: allow disabling the page buttons
	* gumps/MenuGump.cpp: 12 savegame entries
	* gumps/widgets/EditWidget.*: make setText clear cached_text
	* games/stdbindings.*: removed itemLocator (use console cmd instead)
	* gumps/widget/ButtonWidget.*: accept gump layer argument
	* gumps/PagedGump.cpp: put page buttons in ABOVE_NORMAL layer
	* kernel/HIDManager.cpp: make escape show the menu
	* gumps/widgets/EditWidget.cpp: put cursor at end of text by default

2005-04-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/ActorAnimProcess.*: support partial actions
	* world/actors/various: fixes and tweaks to the pathfinder

2005-04-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/CoreApp.cpp: exit when gamepath is incorrect

2005-04-28  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/*Font.*: consts
	* graphics/fonts/Font.cpp: break words longer than a single line
	* gumps/widgets/EditWidget.*: multi-line mode
	* gumps/widgets/EditWidget.*: keep cursor visible when moving it
	* kernel/GUIApp.cpp: enable keyrepeat mode when in textmode
	* data/u8*.ini: translate 'The Beginning...'
	* data/u8.ini: adjust vleads
	* gumps/U8SaveGump.*: partially-functioning save/load gump
	* gumps/MenuGump.*: use save/load gump
	* filesys/Savegame.*, filesys/ZipFile.h: get global zip comment field
	* gumps/PagedGump.*: fixed keyhandling (pages get to handle keys first)
	* Makefile.in: removed (hopefully) unused rule
	* graphics/font/ShapeRenderedText.cpp: cursor support

2005-04-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* Makefile.in: pass CPPFLAGS to compile commands

2005-04-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/CurrentMap.*: made collision detection check if items can
	  overlap properly, by matching solid/roof/damaging flags.
	* various: switch to new sweepTest/isValidPosition semantics

2005-04-21  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/TTFont.cpp: fix border bug
	* graphics/fonts/TTFont.*: cursor support
	* gumps/widget/EditWidget.*: unfinished text-edit widget
	* gumps/MainMenu.*: use EditWidget for the Avatar's name
	* misc/encoding.*: move map from u8's encoding to unicode to new file

2005-04-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/util.*: added TrimSpaces, SplitString, SplitStringKV string
	  handling/parsing utility functions
	* various: used new utility functions
	* various: silenced some output

2005-04-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AnimAction.*: guessing flag 0x10 means same as LOOPING,
	  which is unlikely but seems to work well enough.
	* gumps/SliderGump.*: cache RenderedText

2005-04-17  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/MusicProcess.h : Added method to get the currently playing 
	  music track
	* gumps/MenuGump.* : Grab what music track was playing when the gump 
	  was created, and play it again when the gump is closed
	* games/U8Game.cpp, graphics/SKFPlayer.*,  gumps/MovieGump.* : Added 
	  small hack to stop the SKFPlayer from stopping the Ultima8 theme
	  music from the intro. 
	* world/CameraProcess.cpp : Removed the 'Scroll To' debug output. I'm
	  reasonably confident that it works.
	  
2005-04-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/FontManager.*: changed getFont to getGameFont
	* data/u8.ini, games/GameData.cpp: changed ttf override syntax
	* graphics/fonts/FontManager.*: add interface for non-game ttfonts
	* configure.ac: SDL_ttf is now required instead of optional

2005-04-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/ShapeFontArchive.*: load hleads/vleads from u8.ini
	* gumps/MainMenuProcess.*: process that opens the main menu gump
	* world/actors/AvatarDeathProcess.cpp: show main menu after gravestone
	* games/Game.cpp: reset palette, show main menu after endgame movie
	* graphics/PaletteManager.h: add function to reset a transform matrix
	* kernel/GUIApp.cpp: scale most modal gumps
	* gumps/MenuGump.cpp: don't show endgame/quotes options by default
	* games/Game.cpp: enable endgame/quotes menu entries on endgame

2005-04-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/StartU8Process.*: process to show the intro and ask for your
	  name when starting a new game
	* gumps/MenuGump.*: add special 'nameEntryMode' (will need to be
	  replaced by a proper TextInputWidget)

2005-04-12  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/AudioChannel.*, audio/AudioMixer.*, audio/AudioProcess.*,
	  world/actors/ActorAnimProcess.cpp : Added distance attenuation,
	  left-right panning, implemented setVolumeSFX intrinsic, set default
	  sfx volume to 0x80 (50%) to be consistent with the original, and 
	  added small random pitch shifts to footstep sounds (they are quite 
	  subtle and may need to be larger). Oh, broke savegames too.
	* world/CameraProcess.* : Fixing up a problem where getting the camera 
	  location could cause the screen to become jumpy

2005-04-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Pathfinder*.cpp: properly check tryAnim return value
	* world/actors/Actor.cpp: abort current animation when hit
	* world/actors/Actor.cpp, world/actors/ActorAnimProcess.cpp: stumble
	  away from attacker when getting hit

2005-04-03  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/AudioChannel.*, audio/AudioMixer.*, audio/AudioProcess.*,
	  gumps/ModalGump.cpp : Pauses all currently playing sounds when 
	  entering a modal gump. And unpauses when leaving
	* audio/MusicProcess.cpp, audio/midi/LowLevelMidiDriver.cpp : Hopefully
	  fixing Willems crash problem with FMOPL and map transtions

2005-04-03  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/ClearFeignDeathProcess.cpp, world/Actor.cpp: play SFX when
	  feigndeath/withstanddeath are cancelled
	* world/Actor.cpp: show blood sprite when avatar is hit
	* convert/*/ConvertUsecode*.h: fix event assignment bug in disasm
	* world/Actor.cpp: play SFX when avatar blocks (or fails to block) hit
	* world/Actor.cpp: stumble backwards when hit
	* world/Actor.cpp: kill all actor's processes when setting combat mode
	* world/Actor.cpp: monsters become hostile when attacked
	* kernel/Kernel.*, kernel/Process.*: added some extra access functions
	* audio/AudioProcess.*: only check for duplicate SFX on ambients
	* world/actors/AvatarMoverProcess.cpp: wait when doing animation
	* world/actors/ActorAnimProcess.cpp: terminateDeferred instead of
	  terminate when AnimLock set 
	* world/actors/AvatarMoverProcess.cpp, world/actors/Actor.cpp:
	  gain stats when attacking/hitting/climbing

2005-04-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/MainActor.cpp: play SFX when stats increase
	* world/actors/ActorAnimProcess.cpp, AnimationTracker.cpp:
	  increase framerepeat by one; fixes some anim speed/sync issues
	* world/actors/ActorAnimProcess.cpp: play SFX for drawing/sheating
	  weapon, footsteps
	* world/actors/GrantPeaceProcess.cpp: play SFX
	* world/actors/ActorAnimProcess.cpp: ghosts throw fireballs, summon
	  ghouls. Fireballs explode. Show splashes when walking on water tiles.
	* world/Item.cpp: let explosions do blunt fire damage
	* world/actors/CombatProcess.cpp: don't do a range check for ghost's
	  attacks
	* world/Item.cpp: play SFX for explosion

2005-03-31  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/*: allow disabling interpreting of special characters
	* gumps/CreditsGump.cpp: fix double percent sign

2005-03-31  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* audio/*AudioSample.*: add interface for getting sample length
	* audio/SpeechFlex.*: get length in milliseconds of speech
	* gumps/BarkGump.*: properly sync text and speech

2005-03-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/*: only allow specific gumps to be dragged
	* various: fixed some warnings
	* audio/SpeechFlex.*: match partial strings when looking for speech
	* audio/AudioProcess.*: play full speech if it is split into parts

2005-03-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* audio/SpeechFlex.cpp: trim spaces from strings before matching speech

2005-03-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* audio/RawAudioSample.*: raw 8bit signed/unsigned audio sample
	* graphics/SKFPlayer.*: play sounds, show subtitles
	* gumps/CreditsGump.cpp, games/U8Game.cpp: play credits/quotes music
	* graphics/SKFPlayer.*: tweaked timing
	* games/Game.*: playEndgame intrinsic

2005-03-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* bootstrap, config.*: commit config.sub, config.guess to CVS
	
2005-03-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/CreditsGump.*: fix ending of quotes/credits
	* games/GameInfo.h: add function to return one-letter language code
	* games/GameData.*: load correct usecode/speech files for language
	* graphics/SKFPlayer.cpp: play (some) SFX
	* kernel/Process.*: move all bool flags into a uint32 flags field
	* audio/MusicProcess.*, kernel/Process.*: add new 'run paused' flag
	* bootstrap: pass --config-only to libtoolize

2005-03-24  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/MovieGump.*: made MovieGump modal
	* gumps/CreditsGump.*: gump for playing credits/quotes
	* games/U8Game.*: play Ultima 8's credits/quotes from the menu
	* kernel/ObjectManager.cpp: extra sanity check while loading

2005-03-23  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/*RenderedText.*, gumps/widgets/*Widget.*: pass vlead
	  to text/button widgets to allow proper vertical stacking of text
	* gumps/AskGump.cpp: use ButtonWidget's vlead

2005-03-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/graphics/ShapeFont.cpp: fix vlead

2005-03-21  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/SpeechFlex.*, audio/AudioProcess.*, games/GameData.*,
	  world/Item.cpp : Added some speech support. Mostly just hacked in.
	  Doesnt work entirely properly. But works ok enough for now.
	* audio/AudioMixer.cpp : Set buffer size to 1024
	
2005-03-20  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/ActorAnimProcess.cpp: play animation SFX

2005-03-20  Ryan Nunn <colourles@users.sourceforge.net>
	* Everything: New audio system. Work in progress, but mostly functional
	  so here it is. There is not sound attenuation at the moment so things
	  are always played at full volume regardless of where they are. No
	  speech support yet.

2005-03-20  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/*Game.*: moved intro/endgame to U8Game. Now properly loads
	  non-english intro.

2005-03-20  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* pentagram.cpp: GUIApp no longer dynamically allocated.
	* kernel/Segmented*: rename Simple* and use a simple list instead of
	  the array used to track free nodes.
	* kernel/MemoryManager.*: switch to SegmentedAllocator

2005-03-14  Ryan Nunn <colourles@users.sourceforge.net>
	* gumps/MiniMapGump.*, kernel/ObjectManager.cpp, kernel/GUIApp.cpp :
	  Making the MiniMapGump savable
	* world/DestroyItemProcess.*, world/Container.*, world/Item.*,
	  world/actors/Actor.cpp : Added defered Item deleting.
	* world/actors/DeleteActorProcess.* : Removed this now unneeded
	  process

2005-03-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/PathfinderProcess.cpp: hopefully prevent infinite loop
	  in PathfinderProcess when actor is outside of the fast area

2005-03-13  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/*Pool.*, kernel/*Allocator.*, kernel/MemoryManager.*: new
	  classes to handle memory pooling.
	* misc/pent_include.h: Macro to declare an object to use memory
	  management.
	* kernel/Object.*, kernel/Process.*, usecode/UCProcess.*: use memory
	  pooling.
	* kernel/CoreApp.*: initialize the MemoryManager
	* kernel/Kernel.cpp: reset the kernel when destructing to delete
	  remaining processes.
	* configure.ac: check for gimp 2.2 instead of 2.0

2005-03-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCProcess.cpp: use get_class_name in UCProcess::dumpInfo

2005-03-13  Ryan Nunn <colourles@users.sourceforge.net>
	* graphics/*RenderSurface.* : Added parameter to shape draw functions 
	  to specify to use the untransformed palette.
	* kernel/GUIApp.cpp : Changed it so the mouse is always drawn with the
	  untransformed palette. This means the mouse will no longer change 
	  colour in 'mushroom' mode.
	* usecode/Usecode*.* : Added function to get the class name of a 
	  usecode class.
	* gumps/ShapeViewerGump.cpp : Output usecode class name for shapes from
	  the main shapes flex.
	* graphics/scalers/BilinearScaler*.* : Trying to avoid compilation
	  issues with bilinear scaler. 

2005-03-12  Ryan Nunn <colourles@users.sourceforge.net>
	* gumps/MiniMapGump.*, kernel/GUIApp.cpp : Experimental MiniMap gump.
	  Doesn't save over map changes so it's only 'so' useful.
	* graphics/ShapeFrame.*, world/CurrentMap.* : A few extra functions
	  needed to simplify minimap generation
	* gumps/MiniMapGump.*, world/CurrentMap.* : Added a small hack to 
	  generate the entire map (just sets the entire map fast). Use new
	  'MiniMapGump::generateWholeMap' console command. Note, command
	  only exists when the gump is active. Also I changed the scale to 8.
	* graphics/scalers/2xSaIScalers.*, graphics/scalers/BilinearScaler.*,
	  graphics/Manips.h, graphics/RenderSurface.*, : 
	  Added new Gamma 2.2 Correct GC-2xSaI, GC-Super2xSaI, GC-SuperEagle,
	  and GC-Bilinear scalers. 
	* gumps/MiniMapGump.cpp : Using gamma correct filtering when generating
	  minimap.
	  
2005-03-07  Ryan Nunn <colourles@users.sourceforge.net>
	* gumps/FastAreaVisGump.*, kernel/GUIApp.cpp : Very simple gump to 
	  visualize the fast area. Use console command FastAreaVisGump::toggle
	  to toggle it.
	* world/CameraProcess.cpp, world/CurrentMap.*, gumps/GameMapGump.h :
	  Tightened up fast area calculations. Region is now quite a bit 
	  smaller.
	* usecode/UCStack.*, world/Item.cpp : Made some changes to UCStack
	  so it can work from an array rather than an allocated pointer.
	  Existing functionality is now in a class called DynamicUCStack.
	  Doesn't make a huge difference but it means the stack buffer is
	  part of the memory allocated for the UCProcess (a good thing if we
	  allocate the memory for the UCProcess from a pool).
	  
2005-03-01  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Egg.h: fixed setXRange/setYRange

2005-02-28  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/idMan.cpp: fixed integer overflow bug
	* world/Item.cpp: made leaveFastArea destroy items again, but no actors

2005-02-27  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* configure.ac: add --enable-hq2x option
	* graphics/ScalerManager.*: changed comments into doxygen comments
	* world/Item.cpp: don't let item be destroyed in leaveFastArea

2005-02-27  Ryan Nunn <colourles@users.sourceforge.net>
	* kernel/GUIApp.cpp : Ctrl-V is paste from clipboard for all gumps that
	  accept keyboard input
	* graphics/scalers/BilinearScaler.cpp : Fixing overun crashes when
	  doing Arbitrary scaling due rounding/accuracy problems.
	* kernel/GUIApp.cpp, graphics/ScalerManager.*, graphics/Scaler.h,
	  graphics/scalers/2xSaIScalers.*, graphics/scalers/hq2xScaler.*,
	  misc/version.cpp, objects.mk :
	  Added the ScalerManager that will just handle getting scalers. 
	  Added 2xSaI, Super2xSaI and SuperEagle scalers. Also added hq2x
	  scaler, but that will only be compiled in if USE_HQ2X_SCALER is
	  defined.

2005-02-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/GameData.*: use ttf overrides from u8.ini instead of hardcoded

2005-02-24  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.cpp: cleaned up receiveHit a bit

2005-02-22  Ryan Nunn <colourles@users.sourceforge.net>
	* graphics/RenderSurface.h, graphics/SoftRenderSurface.*, 
	  graphics/Scaler.h, gumps/ScalerGump.*, kernel/GUIApp.cpp
	  graphics/scalers/BilinearScaler.*, graphics/scalers/PointScaler.*,
	  graphics/scalers/Scale2xScaler.* :
	  Things getting close to final implementation. Added Scale2x scaler.
	  Use 'scaler=scale2x' in the ini to use it. Also enabled a cheap and 
	  nasty hack that will allow any 2x scaler to do 320x200->640x480 
	  scaling. Good for Scale2x.

2005-02-21  Ryan Nunn <colourles@users.sourceforge.net>
	* graphics/*RenderSurface.*, graphics/Manips.h, graphics/Scaler.h, 
	  graphics/scalers/BilinearScaler.*, graphics/scalers/PointScaler.*,
	  gumps/ScalerGump.*, kernel/GUIApp.cpp : 
	  Scaler System beginning to take shape and become more final in
	  implementation. Added a few more files

2005-02-20  Ryan Nunn <colourles@users.sourceforge.net>
	* graphics/scalers/PointScaler.h : Optimized the arbitrary scaler a 
	  little. It is now significantly faster 
	* gumps/DesktopGump.h : Only fill if console down or a DEBUG build. 
	  Provides a non trivial speed increase for me.
	* graphics/BaseSoftRenderSurface.*, graphics/RenderSurface.h,
	  graphics/SoftRenderSurface.*, gumps/ScalerGump.*, kernel/GUIApp.cpp,
	  graphics/scalers/BilinearScaler.h :
	  Added a bilinear filtering scaler. Use it by adding scaler=bilinear
	  in the ini. Only works if dimensions of the 'source' surface are
	  multiples of 4. 2x scaling, 2x2.4 scaling (320x200->640x480) and 
	  1x1.2 (640x400->640x480) are fairly quick. Arbitrary scaling is slow,
	  real slow.
	  	  	  
2005-02-19  Ryan Nunn <colourles@users.sourceforge.net>
	* graphics/RenderSurface.* : StretchBlit function sort of implemented
	* graphics/SoftRenderSurface.* : Point scaling for StretchBlit
	* graphics/scalers/PointScaler.h : A simple point scaler. Work in
	  Progress
	* gumps/ScalerGump.* : Scaler gump. 
	* kernel/GUIApp.* : Basic scaler support. Set 'scalex' and 'scaley' to
	  the desired scaling factor. Only integer factors supported. Note
	  it only works IF the backbuffer resolution can be evenly divided by
	  scale factor. So you can't do width=640 with scalex=3 (640 can't be
	  divided by 3). If a scale factor number is negetive, then it is taken
	  to mean an absolute size (positive of course). Same with factors over
	  100. Non integer scaling factors WILL be supported.
	* gumps/ItemRelativeGump.cpp : Fixing prob with relative gump positions
	* data/u8bindings.ini, games/stdbindings.*, graphics/RenderSurface.h,
	  graphics/SoftRenderSurface.*, graphics/XFormBlend.h,
	  gumps/GameMapGump.*, kernel/HIDManager.cpp, world/ItemSorter.* :
	  Pressing (and holding) the tab Key will highlight, and let you click 
	  on hidden items. At least that is what it is supposed to do. Sort of
	  works, but needs refining (shows items it shouldn't)
	* Lots of files : Using GUIApp::addGump()
	* kernel/GUIApp.h : Position all gumps scaled except Modal gumps and
	  Ask and Bark gumps if TTF is being used
	* gumps/AskGump.cpp, gumps/BarkGump.cpp, gumps/widgets/* :
	  Changes so Ask and Bark gumps properly resize on reloads if TTF
	  is toggles
	  
2005-02-14	Darke  <darkepaw@users.sf.net>
	* audio/midi/fmopl.cpp: cast pedantification.
	* world/actors/Animation.cpp,gumps/PaperdollGump.cpp: gcc4 fixes.

2005-02-03  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AvatarMoverProcess.*: avatar looks around when idle
	* world/actors/AvatarMoverProcess.*: try not to interrupt spellcasting

2005-02-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/SchedulerProcess.*: call NPC::schedule every hour

2005-01-31  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AvatarMoverProcess.*: fixed turning, cleaned up
	* world/actors/AvatarMoverProcess.cpp: dblclk on avatar toggles combat
	* kernel/Kernel.*: Kernel::processInfo console command
	* kernel/Process.cpp: dump dependant processes in dumpInfo()
	* world/actors/ActorAnimProcess.*: dumpInfo() for anim processes

2005-01-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/ActorBarkNotifyProcess.*, world/Item.cpp:
	  talk animation while talking
	* world/actors/Actor.*: hasAnim() to check if an Actor has an Animation
	* gumps/Gump.*: allowing setting a custom GumpNotifyProcess

2005-01-30  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* tools/gimp-plugin/*: Compile fixes

2005-01-30  Ryan Nunn <colourles@users.sourceforge.net>
	* world/ItemSorter.cpp, graphics/*RenderSurface.* : 
	  RenderSurface::PaintHighlight() is now ABGR to match FadedBlit. Also 
	  added and uncommented stub for the StretchBlit() function.

2005-01-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/TTF*: added bordersize parameter to TTF rendering
	* kernel/GUIApp.cpp: override book/scroll font with TTF as well,
	  using Vera.ttf
	* kernel/GUIApp.cpp: don't allow saving if avatar is dead
	* graphics/fonts/TTFont.cpp: added special case for bordersize==1
	  to enable loop unrolling
	* graphics/fonts/*RenderedText.*: added paintBlended method
	* gumps/widgets/{Text,Button}Widget.*: added blended mouse-over mode
	* gumps/OptionsGump.cpp, gumps/ControlsGump.cpp: mouse-over

2005-01-28  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* data/u8bindings.ini: set c to combat mode, insert to clipping
	* usecode/UCMachine.*: UCMachine::traceAll intrinsic
	* world/Item.*: EXT_PERMANENT_NPC flag to mark NPCs with a fixed ObjId
	* world/Item.cpp: only use usecode class (1024+ObjId) for perm. NPCs

2005-01-24  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: s/statis/stasis/

2005-01-23  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* tools/gimp-plugin/*: Palettes now saved in the gimp after loading
	  once. Requires gimp-2.2.

2005-01-22  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* misc/Console.*: RemoveConsoleFunction to remove all commands attached
	  to a function.
	* kernel/HIDManager.cpp: Use RemoveConsoleFunction instead of looping
	  though the bindings.

2005-01-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.*: enable usecode tracing with console commands
	* configure.ac: added 'DEBUG' define by default
	* usecode/UCMachine.cpp: move usecode tracing to #ifdef DEBUG

2005-01-20  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/u8bindings.cpp: add useInventoryItem function
	* games/u8bindings.*, kernel/HIDManager.cpp: useKeyring, useBedroll

2005-01-19  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp: fixed left-over dragging shadows for invalid drops
	* world/Item.*: fix weight calculations for quantity/reagent items
	* world/Item.cpp: don't allow dragging zero-weight items
	* world/CurrentMap.cpp: don't call schedule() on NPCs when loading
	* world/actors/ActorAnimProcess.cpp: properly use fall() when falling

2005-01-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/CurrentMap.cpp: don't let areaSearch skip passed item
	* world/Item.cpp: dragging corpses is allowed
	* world/Item.*: supply second parameter (hitforce) to gotHit/hit

2005-01-11  Ryan Nunn <colourles@users.sourceforge.net>
	* graphics/BaseSoftRenderSurface.*, graphics/RenderSurface.h : Added  
	  option to flip a surface. Note it does have some weirdness. It acts
	  as if the CURRENT clipping window is being flipped. As such it will
	  change the logical pixel origin to be in the same relative place to
	  the clipping window. So need to be careful that things are always 
	  paired and nested properly. Doing this would be very bad: 
	    Flip, SetClippingWindow, UnFlip, ResetClippingWindow. 
	* gumps/InverterGump.cpp : Updated to use the new non-blit flip.

2005-01-03  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* filesys/Archive.*: reverse order of searching input sources

2005-01-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* Makefile.in, acinclude.m4: rebuild config.h when necessary

2005-01-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* tools/shapeconv/ShapeConv.cpp: output 0x1A bytes to ID flex
	* bootstrap, tools/gimp-plugin/module.mk: add Makefile, create .deps

2005-01-02  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* Makefile.in, configure.ac: Add option to build gimp plugin
	* tools/gimp-plugin/*: Initial version of our gimp plugin - supports
	  loading only

2005-01-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* tools/flexpack/*: properly handle missing objects

2005-01-02  Ryan Nunn <colourles@users.sourceforge.net>
	* misc/pent_include.h : ShapeFlex.h no longer exists so removing it 
	  from PCH includes
	* audio/MusicFlex.cpp : Zeroing songs array

2005-01-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/CombatProcess.cpp: fixed saving
	* usecode/UCMachine.cpp: fixed broken call, ret opcodes

2005-01-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* filesys/zip/*: converted to something resembling C++

2005-01-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* filesys/ArchiveFile.*: new backend archive-file (flex, zip, ...)
	  reading class
	* filesys/Archive.*: new frontend archive class; can handle multiple
	  ArchiveFiles as input sources; replaces the old 'Flex' class
	* filesys/*File.*: ZipFile, U8SaveFile, FlexFile, DirFile file types
	* graphics/*ShapeArchive.*: *ShapeArchive replace *ShapeFlex
	* filesys/zip/*: unzip/zip code
	* filesys/Savegame.*: read from ZipFile
	* filesys/SavegameWriter.*: output zipped savegame
	* *: use new classes instead of old Flex classes
	* configure.ac: detect zlib
	* configure.ac: enable SDL_ttf by default

2005-01-01  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* graphics/Palette*.*: Moved the PalTransforms enum to Palette.h
	* graphics/Shape.*: Added another DetectShapeFormat to directly use
	  IDataSources
	* kernel/GUIApp.cpp: Updated location of PalTransforms

2005-01-01  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* filesys/IDataSource.h: read() now returns number of bytes read
	* filesys/ListFiles.h: use rewrite_virtual_path to detect illegal paths

2004-12-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* *: get rid of per-object/process savegame versions
	* tools/compile/llcLexer.l: remove double pent_include.h include

2004-12-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/version.*: version info

2004-12-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AnimationTracker.*: removed 'dangerous' constructor
	* docs/savegame.txt: new INFO savegame file
	* kernel/GUIApp.*, games/U8Game.*: write INFO data
	* kernel/GUIApp.*: makeAvatarACheater intrinsic
	* world/actors/MainActor.*: store avatar's name; MainActor::name concmd
	* usecode/UCMachine.*: use MainActor's name

2004-12-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AnimationTracker.*: removed 'dangerous' constructor

2004-12-28  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AnimationTracker.*: properly detect missing animations

2004-12-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp, games/U8Game.cpp: reserve some more objids

2004-12-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Object.*: Object::dumpInfo()
	* kernel/ObjectManager.*: reserveObjId() function in objectmanager
	* games/U8Game.cpp: moved reserveObjId(666) to U8Game
	* kernel/ObjectManager.*: ObjectManager::objectInfo console command
	* kernel/GUIApp.cpp: reserve 32 objids for core gumps
	* world/actors/Pathfinder.cpp: silenced some debugging messages

2004-12-26  Ryan Nunn <colourles@users.sourceforge.net>
	* world/actors/HealProcess.cpp: Fixing a serious problem in 
	  I_feedAvatar(), were casting hp, instead of p

2004-12-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/PathfinderProcess.*: very basic moving-target support
	* world/actors/CombatProcess.*: pathfind to target

2004-12-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp: properly reset inversion state

2004-12-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/InverterGump.*, graphics/InverterProcess.*: screen inversion

2004-12-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/Gump.*: new gump flag CORE_GUMP for gumps like DesktopGump,
	  GameMapGump and ConsoleGump. Children of gumps with this flag will
	  be saved even if the gump itself is not saved.
	* kernel/GUIApp.*: addGump() call to add a gump to DesktopGump.
	  This will be changed in the future for scaler/inverter layers.
	* kernel/ObjectManager.*: CORE_GUMP, addGump. Breaks old saves (badly).

2004-11-30  Dominik Reichardt <dominus@users.sourceforge.net>
	* FAQ, docs/xml/faq.xml: added some more questions and answers
	
2004-11-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/CombatProcess.*: make monster turn to face target
	* world/actors/AnimationTracker.cpp: silenced hit checks

2004-11-24  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/CombatProcess.cpp: slow down attacks depending on dex

2004-11-23  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AnimationTracker.*: track attacks as well
	* world/actors/ActorAnimProcess.*: let tracker handle weapon checks
	* world/actors/CombatProcess.*: combat utility functions
	* world/actors/CombatProcess.*: let monster attack if enemy in range
	* world/actors/Actor.cpp: create CombatProcess for combat activity

2004-11-21  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/GrantPeaceProcess.*: castGrantPeace intrinsic
	* world/FireballProcess.*: TonysBalls intrinsic
	* world/Item.*: make collideMove return which item was hit
	* world/actors/HealProcess.*: heal gradually; feedAvatar intrinsic
	* kernel/Kernel.cpp: don't find/count terminated processes
	
2004-11-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp: silenced unhandled intrinsic messages
	* usecode/UCMachine.*: UCMachine::{set,get}Global console commands

2004-11-14  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/HIDManager.*: Replaced "do" command with separate commands for
	  each HIDBindings
	* kernel/GUIApp.cpp: Removed "do" command entry
	* games/u8bindings.*: Experimental code accidently crept in

2004-11-14  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/HIDBinding.h: Add HID_Event to replace SDL_Event for bindings
	* kernel/HIDManager.*: Add "do" command to execute bindings and add
	  method to build HID_Events from SDL_Events
	* kernel/GUIApp.cpp: Add new console command and use HID_Events
	* games/u8bindings.*: switch to HID_Event
	* games/stdbindings.*: switch to HID_Event

2004-11-14  Ryan Nunn <colourles@users.sourceforge.net>
	* games/U8Game.cpp : Activate Music Egg on new game

2004-11-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*: added canDrag() and getThrowRange() functions
	* gumps/GameMapGump.cpp: use canDrag/getThrowRange
	* world/Container.cpp: let dumpInfo() output total weight

2004-11-14	Darke  <darkepaw@users.sf.net>
	* *: Lots of changes to remove warnings.
	* world/Item.*: Changed Item::Lerped::{shape|frame} to be uint32,
	  rather then sint32, to be consistent with rest of code. Doesn't seem
	  to have caused any problems, but might if trying to relative shift
	  shapes/frames.
	
2004-11-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/MissileProcess.cpp: don't force-collideMove; fall when done

2004-11-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Kernel.*: added terminate/fail switch to killProcess calls
	* kernel/Object.cpp: fail processes when destroying owner after all
	* world/actors/ActorAnimProcess.cpp: don't wait for fall to finish
	* usecode/UCMachine.cpp: properly show all process changes in trace

2004-11-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Kernel.*: don't kill processes with item 0 on map change
	* kernel/Kernel*, kernel/Object.cpp: don't fail a process when
	  destroying its owner, but terminate it

2004-11-09  Ryan Nunn <colourles@users.sourceforge.net>
	* filesys/FileSystem.cpp,misc/exceptions.h: getting rid of exceptions.h

2004-11-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Kernel.*: add findProcess function
	* world/actors/CombatProcess.*: do-nothing CombatProcess
	* world/actors/Actor.*: various combat intrinsics
	* world/actors/MainActor.*: more combat intrinsics

2004-11-07  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*: canReach intrinsic
	* gumps/GameMapGump.cpp, gumps/ContainerGump.cpp:
	  use canReach when using items
	* gumps/GameMapGump.cpp, gumps/ContainerGump.cpp:
	  use canReach when dragging items; use target cursor when necessary

2004-11-07  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/Gump.h: typo in gump flag name (s/DEPENDANT/DEPENDENT/)
	* world/Item.*: igniteChaos intrinsic

2004-11-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AvatarDeathProcess.*: AvatarDeathProcess (show RIP gump)
	* world/actors/MainActor.cpp: start AvatarDeathProcess
	* data/u8*ini: translations of 'rest in peace' message

2004-10-27  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/MusicProcess.*, kernel/GUIApp.cpp : Added a new console command
	  MusicProcess::playMusic
	* other files: Getting rid of some warnings

2004-10-27  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/HIDManager.cpp: fix typos
	* audio/MusicProcess.cpp: don't kill MusicProcess on map change

2004-10-18  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/Joystick.cpp, kernel/HIDManager.cpp: replace bad asserts

2004-10-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/U8Game.cpp: added 'skipstart' config option
	* kernel/CoreApp.cpp: fix game detection at startup
	* games/GameInfo.h, games/GameDetector.cpp: simple Crusader detection

2004-10-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/CurrentMap.*: detect 'touching_floor' in sweepTest
	* world/Item.cpp: don't call hit() when touching, unless touching_floor
	* world/CurrentMap.cpp: hit_time = -1 when already hitting at start

2004-10-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.cpp: don't make legalMoveToPoint teleport an item
	* world/Item.cpp: fixed collideMove to also call Hit on items that
	  prevent an item from moving at all

2004-10-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Kernel.*: added Kernel::listItemProcesses console command
	* kernel/Process.*, usecode/UCProcess.*: Process::dumpInfo
	* world/actors/AvatarMoverProcess.cpp: removed some noise
	* world/actors/ActorAnimProcess.cpp: some extra debugging output
	* world/actors/MainActor.cpp: update avatar's mapnum before teleporting

2004-10-14  Dominik Reichardt <dominus@users.sourceforge.net>
	* FAQ: updated with old spelling corrections
	* Readme, docs/xml/readme.xml: show font replacement options
	
2004-10-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/CameraProcess.*: add destructor for clearing static camera
	* kernel/GUIApp.cpp: hide console and reset time when starting new game
	* kernel/GUIApp.*: GUIApp::newGame console command
	* world/actors/Pathfinder.*: delete nodes
	* conf/ConfigFileManager.cpp: clear on exit

2004-10-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp: add 'ttf' config option for TTF overrides

2004-10-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/CurrentMap.*: don't call cachein when loading games
	* world/CurrentMap.cpp: disabled cachein for actors (temporarily?)

2004-10-10  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* gumps/Gump.*, kernel/GUIApp.*: added mouse motion support for gumps
	* gumps/widgets/ButtonWidget.cpp: option to change shape on mouse over
	* gumps/MenuGump.cpp: menu options now light up on mouse over like
	  original

2004-10-08  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* world/actors/AnimationTracker.*: targeted jump do not affect z.
	  Avatar should not be able to jump higher, and gravity + inertia
	  should take care of falling.

2004-10-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/U8Game.cpp: put avatar in stasis at the beginning

2004-10-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/PaperdollGump.cpp, gumps/SliderGump.cpp: use FontManager

2004-10-07  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/GUIApp.cpp: clean up the textmodes input handling for possible
	  additions to type of input it could handle.

2004-10-07  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts/FontManager.*: new FontManager for font overrides
	* kernel/GUIApp.*: init FontManager and setup some (test) overrides
	* gumps/widget/TextWidget.cpp: use FontManager to get Font
	* graphics/fonts/TTFont.*: let FontManager handle SDL_ttf
	* gumps/ShapeViewerGump.cpp: use FontManager

2004-10-06  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/*Game.*: Game class with game initialisation functions
	* kernel/*App.*: reworked startup sequence to be more flexible

2004-10-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/pent_include.h: fix CANT_HAPPEN_RETURN, typos
	* kernel/DelayProcess.*: add RUNTIME_CLASSTYPE
	* gumps/Gump.h: added DONT_SAVE gump flag
	* gumps/ModalGump.cpp, gumps/*: assert when trying to save/load modals
	* kernel/CoreApp.*: split up loadConfig and initGame
	* kernel/GUIApp.cpp: fix saving gametime
	* kernel/GUIApp.cpp: reset mouse cursor on load

2004-09-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* */module.mk, common.mk, Makefile.in: fix building from outside srcdir

2004-09-11  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/GUIApp.cpp: always send mouse up event to gumps - fixes combat
	  lock

2004-09-05  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/GUIApp.cpp: moved quick move keybings into HIDBindings
	* game/stdbindings.*, kernel/HIDManager.cpp: created more HIDBindings
	* world/actors/QuickAvatarMoverProcess.h: renamed method for quarter
	  speed

2004-09-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/BookGump.*, gumps/ScrollGump.*: close books/scrolls on dblclick
	* world/actors/Actor.cpp: don't make things wait for LoiterProcess

2004-09-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Kernel.*: added killProcessesNotOfType function
	* world/World.cpp: kill all processes not of type 1 on map change
	* world/actors/AvatarMoverProcess.cpp: set type to 1
	* world/actors/TeleportToEggProcess.*: set type to 1
	* world/actors/AvatarMoverProcess.cpp: set type to 1 on load (hack!)
	* kernel/Process.*: added fail function to kill a process and all
	  the processes waiting for it recursively
	* kernel/Kernel.*: killProcess* now uses fail() instead of terminate()
	* graphics/PaletteFaderProcess.cpp: terminate, don't delete, old faders
	* world/MonsterEgg.*: set monster activity
	* world/MonsterEgg.cpp: check if new monster's position is valid
	* world/actors/AvatarMoverProcess.*: airwalk
	* kernel/Process.cpp: don't kill processes of type 1 when failing
	* world/actors/LoiterProcess.*: loiter
	* gumps/ContainerGump.*: don't let position depend on parent's Gump
	* gumps/PaperdollGump.*: don't close backpack when closing paperdoll
	* world/Item.h, world/ItemSorter.cpp: don't draw invisible items,
	  added EXT_TRANSPARENT flag to draw item transparently

2004-09-03  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/SplitItemProcess.cpp: fixed double-terminate

2004-09-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/ContainerGump.cpp: don't paint editor items
	* graphics/TypeFlags.cpp: fix ArmourInfo loading
	* data/u8.ini, data/u8monsters.ini: let Malchir drop Tongue of Flame
	* world/actors/Actor.*: mostly unimplemented cSetActivity intrinsic
	* world/Egg.cpp: let dumpInfo show state of hatched flag

2004-09-02  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/GUIApp.cpp: Separated the QuickAvatarMoverProcess from GUIApp
	* world/actors/QuickAvatarMoverProcess.*: new Quick Mover

2004-09-01  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCList.h: fixed CopyList
	* usecode/UCMachine.cpp: fixed listHeap corruption bug
	* usecode/UCMachine.cpp: output some extra info for a few list opcodes

2004-08-31  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/GlobEgg.cpp: fix glob expansion coordinates
	* world/CurrentMap.cpp: removed wrong fix for ascending platforms
	* usecode/UCMachine.cpp: silenced some noisy usecode warnings

2004-08-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp: added workaround to U8 usecode bug (see below)
	* docs/u8bugs.txt: starting to document some bugs in U8's usecode/data
	* world/Item.cpp: fixed legalCreate* intrinsics

2004-08-29  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* kernel/CoreApp.cpp: pass SDL_INIT_JOYSTICK to SDL_Init
	* kernel/Joystick.*: limited support for joystick
	* kernel/HIDManager.*: allow bindings to joystick buttons from
	  console only.
	* kernel/GUIApp.*: removed animation test code, removed hitting
	  code in QuickAvatarMoverProcess and moved hitting flag to GUIApp

2004-08-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Actor.*: areEnemiesNear intrinsic
	* world/Item.*: the schedule usecode event takes a uint32 time argument
	* world/actors/Actor.*: schedule intrinsic
	* kernel/GUIApp.*: export getGameTimeInSeconds function
	* world/actors/ClearFeignDeathProcess.*: ClearFeignDeathProcess
	* world/actors/Actor.*: {set,clr}FeignDeath intrinsics
	* world/actors/Actor.*: don't resurrect skeletons when killed by fire
	* kernel/GUIApp.cpp: add Flame Sting to starting equipment
	* world/Item.*: gotHit intrinsic
	* kernel/Kernel.cpp, gumps/GumpNotifyProcess.cpp, kernel/Process.cpp:
	  fixed double-terminate
	* usecode/UCMachine.cpp: fixed 'assign element' opcode bug
	* usecode/UCStack.h: renamed moveSP to setSP
	* world/actors/DeleteActorProcess.cpp: fixed double-terminate

2004-08-28  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*: Item::ascend intrinsic
	* world/CurrentMap.cpp: allow slight overlap in some cases
	* usecode/UCMachine.cpp: opcode 0x3E pushes an _un_signed 8 bit int
	* usecode/UCMachine.cpp: release string/list IDs when freeing them
	* usecode/UCList.h: minor tweaks to allow appending a list to itself
	* misc/idMan.*: don't break the list when freeing ID zero.
	* world/actors/Actor.*: {set,get}AirWalkEnabled intrinsics
	* kernel/GUIApp.cpp: add Theurgy foci to Avatar's starting equipment
	* world/actors/Actor.*: pathfindToPoint intrinsic

2004-08-27  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: uninitialized variables
	* world/actors/PathfinderProcess.cpp: save/load properly
	* world/actors/AnimationTracker.cpp: don't save/load uninitialized vars
	* filesys/ODataSource.h: start OAutoBufferDataSource at size 0

2004-08-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/GameMapGump.cpp: properly hit/release when dragging an item

2004-08-15  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* world/actors/AnimationTracker.cpp: Hack to make jumping down act a
	  little nicer

2004-08-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/ActorAnimProcess.cpp: kill anim when leaving fastarea
	* world/actors/Pathfinder*.cpp: removed debugging output
	* world/Item.cpp: don't knock back zero-weight items when hit
	* gumps/ShapeViewerGump.cpp: fixed bounds problem with shift-arrow

2004-08-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/*, kernel/GUIApp.*: fix item dragging offset; cleanup
	* gumps/Gump.h: gump is also hidden if parent is hidden

2004-08-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/SplitItemProcess.*: process to split up a stack of items
	* gumps/ContainerGump.cpp: ask how to split up stacks when dragging

2004-08-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AnimationTracker.*: fixed teleporting while playing anim
	* kernel/GUIApp.cpp: some free necromancy reagents at startup
	* gumps/GameMapGump.cpp: put item in backpack if dropping on Avatar

2004-08-09  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* world/actors/ActorAnimProcess.cpp: pause animation when actor leaves
	  fast area
	* world/actors/TargetedAnimProcess.cpp: save and load properly
	* world/actors/AnimationTracker.cpp: keep stats unchanged if step is
	  called when tracker finishes
	  Only add height automatically if frame is on ground
	* world/actors/Actor.cpp: use AnimationTracker in tryAnim()

2004-08-09  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AnimationTracker.cpp: fixed weapon overlays
	* world/actors/ActorAnimProcess.cpp: removed old code

2004-08-08  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* world/actors/AnimationTracker.*: added TargetMode for targeted jumps
	* world/actors/TargetedAnimProcess.*: very small process for targeted
	  jumps
	* world/actors/AvatarMoverProcess.cpp: added targeted jumping

2004-08-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AnimationTracker.*: moved next frame code to sep. func.

2004-08-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AnimationTracker.*: a class to handle animations
	* world/actors/ActorAnimProcess.*: use AnimationTracker internally
	* world/actors/PathfindingProcess.*: set ACT_PATHFINDING flag
	* gumps/BarkGump.*: don't save string unnecessarily
	* kernel/Kernel.cpp: fixed double-terminate bug

2004-07-27  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: fixed tetxture typo

2004-07-22  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* gumps/GameMapGump.h: moved position calculation in dragging to
	  a new function for other use later.

2004-07-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/ItemSorter.*: determine which face was hit in Trace
	* gumps/GameMapGump.cpp: calculate proper item position when dragging

2004-07-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* Makefile.in: fix PCH compilation if make has a built-in .cpp->.o rule

2004-07-20  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* audio/midi/UnixSeqMidiDriver.*: ported UNIX sequencer device MIDI
	  driver from ScummVM
	* audio/midi/ALSAMidiDriver.*: ported ALSA MIDI driver from ScummVM
	* configure.ac: check for ALSA

2004-07-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/TreasureLoader.*: added 'map' treasure selector
	* data/u8.ini, data/u8monsters.ini: some treasure definitions

2004-07-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/TreasureLoader.*, graphics/TypeFlags.cpp:
	  load treasure definitions from .ini files
	* world/actors/Actor.*: give actors treasure on death
	* world/actors/TreasureInfo.h: TreasureInfo struct
	* world/actors/MonsterInfo.h: added TreasureInfo vector to MonsterInfo
	* graphics/ShapeInfo.h: added hasQuantity() function
	* data/u8.ini: temporary treasure definition

2004-07-12  Ryan Nunn <colourles@users.sourceforge.net>
	* gumps/ConsoleGump.cpp : Clear command buffer when closing
	* misc/Console.cpp : Fixing crash when closing console with chars typed
	* world/ItemSorter.cpp : Correctly trace against flipped shapes
	
2004-07-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Actor.*: fix combat-stat functions for non-monster Actor

2004-07-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Actor.*: Actors can now also have non-equipped contents

2004-07-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Actor.*: get defense type and armour class for monsters
	* world/actors/MainActor.*: moved defending/attacking dex to MainActor
	* world/actors/MainActor.cpp: fixed max. stats
	* world/actors/MainActor.*: added 'MainActor::maxStats' concmd cheat
	* kernel/GUIApp.cpp: start with magic weapon

2004-07-09  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* world/CurrentMap.*: second version of surfaceSearch added
	* world/actors/Actor.cpp: use surfaceSearch for END_OFF_LAND test
	* world/actors/AvatarMoverProcess.cpp: keepBalance before stepping off
	  cliffs.

2004-07-07  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* data/u8monsters.ini: mark seeker as exploding
	* world/actors/Actor.cpp: let seekers explode on death
	* world/Container.cpp: removeContents()
	* data/u8monsters.ini: mark various monsters with vanishing bodies
	* world/actors/DeleteActorProcess.*: process that deletes a dead actor
	* world/actors/Actor.cpp: make body of various monsters vanish

2004-07-06  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*: make Item::grab() also call the release event
	* world/Item.*: added Item::hurl() function
	* world/actors/MainActor.cpp: fixed crash in recall parsing
	* world/CurrentMap.cpp: trying to fix touch-detection in sweepTest

2004-07-05  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* world/actors/Animation.h: changed flag name
	* world/actors/Actor.*: tryAnim will return END_OFF_LAND if land is
	  not directly below when animation finishes.

2004-07-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AnimAction.h: new flag (AAF_UNSTOPPABLE)

2004-07-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/GameMapGump.cpp: don't ignore FLIPPED flag when dragging

2004-07-04  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* world/actors/Animation.h: added Result enum for trying animations
	* world/actors/Actor.*: tryAnim now returns an Animation::Result
	* world/actors/AvatarMoverProcess.cpp: climbing works now

2004-07-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*, gumps/GameMapGump.cpp, gumps/ContainerGump.cpp:
	  added dead NPC special case to Item::use
	* world/actors/Actor.cpp: kill all of actor's processes when killed
	* world/actors/ResurrectionProcess.*: resurrect-skeleton process
	* data/u8monsters.ini: mark skeleton as automatically resurrecting
	* world/actors/Actor.cpp: resurrect skeletons
	* kernel/GUIApp.cpp: check if SDL_OpenAudio succeeded

2004-07-03  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/ActorAnimProcess.*: don't play anim outside of fastarea

2004-07-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/ActorAnimProcess.*: cleaned up error conditions
	* world/actors/AvatarMoverProcess.*: experimenting with turning a bit
	* world/actors/PathfinderProcess.cpp: warn on ANIMLOCK

2004-06-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*: added getDirToItemCentre
	* world/actors/ActorAnimProcess.*: check for weapon hits
	* world/CurrentMap.cpp: use item dimensions in areaSearch

2004-06-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/SliderGump.*: cleanup, added left/right buttons

2004-06-24  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/PathfinderProcess.cpp: wait until ANIMLOCK flag unset
	
2004-06-23  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/common_types.h: new {s,u}intptr types of same size as pointer
	* various: amd64 fixes
	* graphics/RenderSurface.cpp: check if SDL_GetVideoInfo() failed

2004-06-20  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* FAQ, docs/xml/faq.xml: added anti-piracy stance

2004-06-20  Dominik Reichardt <dominus@users.sourceforge.net>
	* Readme,FAQ, docs/xml/*.xml, *.xsl: show changes last and minor corrections
	* docs/xml/Readme: tidied up the docs-generating instructions

2004-06-16  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* gumps/MenuGump.*: Storing the button ids is not actually needed
	* gumps/OptionsGump.*: Storing the button ids is not actually needed

2004-06-16  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/MenuGump.cpp: hacky intro/endgame support

2004-06-15  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* gumps/ControlsGump.cpp: does not set mouse cursor anymore
	* gumps/MenuGump.cpp: attached OptionsGump to Options
	* gumps/OptionsGump.*: initial version of options menu
	* gumps/PagedGump.*: responsible for setting mouse cursor now
	* gumps/MenuGump.*: add a selectEntry method to clean up a hack
	* gumps/OptionsGump.*: add a selectEntry method to clean up a hack

2004-06-13  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* gumps/widgets/ButtonWidget.cpp: verify mouse is on button during
	  click.
	* kernel/GUIApp.cpp: store the mouse position to downX/Y on mouse up
	  so clicks process correctly.
	* world/actors/AvatarMoverProcess.cpp: TODO was already TODONE :-)

2004-06-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Actor.*, world/actors/MonsterEgg.cpp: use monster stats

2004-06-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.cpp: fixed return value of item creation intrinsics
	* usecode/UCMachine.cpp: fixed endlines when monitoring classes/items

2004-06-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Pathfinder.cpp: play a stand animation after the path

2004-06-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/ContainerGump.cpp, world/Container.*: move items to end of a
	  container's contents list after dragging them around in a gump

2004-06-03  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* gumps/ContainerGump.cpp: Direct dropping items into containers is
	  only allowed if the container is not marked as land and not an NPC.
	* gumps/GameMapGump.cpp: Dropping items is more accurate now, and
	  direct dropping into avatar is allowed.

2004-06-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Pathfinder*.*: some tweaks to the pathfinder
	* world/actors/Actor.cpp: enabled pathfinder again

2004-06-01  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* gumps/Gump.cpp: ensure Gumps are properly closed in the destructor
	* gumps/MenuGump.*: saves and loads, but loads only once properly?
	* gumps/ModalGump.cpp: Relock the keyboard and pause kernel after load
	* kernel/ObjectManager.cpp: add MenuGump ObjectLoader

2004-05-29  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* filesys/Flex.*: isFlex returns true for ultima8 flexes.
	* graphics/fonts/TTFont.*: added colour parameter
	* kernel/GUIApp.cpp: delete ttffont when destructor is called
	* tools/disasm/Disasm.cpp: use argv[0] as program name in usage
	* tools/flexpack/*: tools for building flexes, which resembles
	  exult's expack

2004-05-23  Dominik Reichardt <dominus@users.sourceforge.net>
	* Readme,FAQ: replaced with xml/xsl generated version
	* docs/xml/*.*: everything needed to generate the ReadMe, FAQ and the
	  dat files for our future website is in here
	
2004-05-23  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* gumps/GameMapGump.*: Always send clicks to the AvatarMoverProcess
	* gumps/MenuGump.cpp: Correction to make other laguages look right
	* gumps/QuitGump.cpp: Correction to make other laguages look right
	* world/actors/AvatarMoverProcess.cpp: Handle jump from standing still

2004-05-23  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* data/u8{french,german,spanish}.ini: translations
	* graphics/FrameID.*: a FrameID class for easy addressing of a frame
	* gumps/widgets/ButtonWidget.*, gumps/*: use FrameID
	* games/GameData.*: some translation functions/macros
	* gumps/QuitGump.cpp, gumps/MenuGump.cpp: translations

2004-05-23  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* games/Game*: moved kernel/Game* to games/

2004-05-22  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* gumps/BindGump.cpp: Text in BindGump is now represented as a single
	  TextWidget instead of 3 separate TextWidgets.

2004-05-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* configure.ac, Makefile.in: --enable-gcc-pch enables PCH in gcc 3.4

2004-05-20  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AvatarMoverProcess.cpp: handle all left mouse clicks
	* usecode/UCMachine.cpp: ignore error when trying to wait for PID 0

2004-05-19  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* filesys/Flex.*: added p_dynamic cast support (base class)
	* graphics/ShapeFlex.*: added p_dynamic cast support
	* graphics/MainShapeFlex.*: added p_dynamic cast support
	* gumps/ShapeViewerGump.cpp: added shapeinfo to gump when viewed
	  shape is from MainShapeFlex.
	* graphics/**ShapeFlex.*: added flex id for use with GameData
	* graphics/Shape.*: store flex id and shapenum so the shape can be
	  saved and loaded properly.
	* graphics/fonts/ShapeFont.*: complies with new constructor for Shape
	* gumps/Gump.cpp: Properly saves and loads the shape
	* gumps/ReadableGump.cpp: Removed some unneccesary items from save and
	  load
	* gumps/ShapeViewerGump.cpp: complies with new constructor for
	  ShapeFlex
	* gumps/widgets/ButtonWidget.cpp: Properly saves and loads the up and
	  down shapes
	* kernel/GameData.*: added ability to get ShapeFlexes by an id

2004-05-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/PaperdollGump.*: output stat descriptions

2004-05-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* configure.ac: use AC_CONFIG_HEADERS instead of AM_CONFIG_HEADER
	* acinclude.m4: include AM_PATH_SDL macro
	* graphics/Texture.h: initialize format

2004-05-17  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* conf/*.*: Added unset method to remove keys from conf altogether.
	* kernel/HIDManager.*: save bindings now clears keys in the settings
	  manager that are not bound. Added unbind and listbinds console
	  commands.
	   
2004-05-16  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/MusicProcess.cpp : Fixing bug with stop

2004-05-16  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/MovieGump.*: movie gump
	* graphics/SKFPlayer.*: u8 skf player

2004-05-16  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/BookGump.cpp, ScrollGump.cpp: don't save text twice
	* graphics/Shape.cpp: check shape ident string
	* graphics/Palette*.*: allow loading palettes without xforms

2004-05-16  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* data/u8bindings.ini: Organized and added showMenu to the default
	  bindings
	* kernel/GUIApp.cpp: Default bindings only loaded from @data and 
	  GameInfo is used to detect the game rather than using the game string
	* kernel/HIDManager.*: Bindings now loaded from SettingManager unless
	  not present. Bindings can be saved using the HIDManager::save command
	* gumps/ReadableGump.*: Using TextWidget to display text.
	* gumps/widgets/TextWidget.*: Added constructor parameter to align text
	* docs/savegame: Addition of ReadableGump and change to TextWidget

2004-05-15  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* gumps/ReadableGump.*: A gump to handle reading graves and plaques
	* usecode/u8intrinsics.h: Attached ReadableGump
	* graphics/fonts/ShapeFont.cpp: set vlead to -1 to fix overlapping of
	  some fonts. Other fonts still appear fine.
	* graphics/fonts/Font.cpp: asterisks are handled as line breaks for now
	* kernel/HIDManager.cpp: slight clean up

2004-05-15  Ryan Nunn <colourles@users.sourceforge.net>
	* graphics/*.* : Added RenderSurface::FadedBlit() that allows a blit 
	  from a texture to be blended with a colour. Use the TEX32_PACK_RGBA()
	  macro for the colour. The Alpha component of the colour the amount of
	  blending to do. 0 Alpha is no blending, 255 Alpha is total blending.

2004-05-15  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/midi/fmopl.cpp : Fixing a problem with an overloaded function
	  using a certain 'unnamed' compiler.
	* filesys/FileSystem.cpp : Hack for WinCE
	* graphics/*.* : Added Rendering To Texture support. Use static 
	  CreateSecondaryRenderSurface() to create a surface that you can get 
	  a texture for using GetSurfaceAsTetxture(). Do NOT delete the texture
	  that is returned by the call. The surface itself will delete the 
	  texture. You WILL need to call Begin/EndPainting on the SRS when you
	  want to paint to it. The format of the surface and the texture match
	  the back buffer.
	* gumps/PaperdollGump.cpp : WinCE problem
	* kernel/CoreApp.cpp : I don't think all WinCE users want their HOME 
	  dir in Pentagram to be one of my networked directories. :-)
	* kernel/GUIApp.cpp : Yet another WinCE hack :-)
	* disasm/Disasm.cpp : Added a hacky mode that will only output strings
	* tools/fold/*.* : Getting rid of some stupid warnings
	* world/actors/AvatarMoverProcess.cpp : Fixing up signed/unsigned
	  comparisons
          
2004-05-13  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* world/actors/AvatarMoverProcess.*: Running in combat switches to
	  normal mode until right button released, and jumping occures only
	  once per mouse click.
	* gumps/PagedGump.*: next page and previous page are now represented by
	  gump 34. Pages are no longer named.
	* gumps/MenuGump.cpp: reflect changes to PagedGump

2004-05-12  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* AUTHORS: Added myself to authors
	* gumps/Gump.cpp: Hidden gumps are skipped in OnMouseDown
	* gumps/ControlsGump.*: separate methods for a gump to the stdbindings
	  and the u8bindings
	* gumps/PagedGump.*: Gump for controling which gump is shown via
	  buttons on top.
	* gumps/MenuGump.cpp: attached a PagedGump with ControlsGumps the
	  Options button
	* gumps/PagedGump.*: Modified to only display next and previous buttons
	  if they can be used.

2004-05-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/BookGump.*: BookGump
	* docs/u8sfxfmt.txt: audio compression algorithm

2004-05-09  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*: some more intrinsics (legalMoveToContainer, getRange)
	* world/CurrentMap.cpp: fixed isValidPosition
	* world/Item.cpp, world/MissileProcess.cpp: darts now look a bit better

2004-05-07  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/widgets/ButtonWidget.*: register clicks in the entire button
	  rectangle, not just the non-transparent parts of the shape.

2004-05-07  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* games/stdbindings.*: Quit and toggleConsole added.
	* gumps/BindGump.*: simple gump to ask for a key or button -
	  alters HIDBindings
	* gumps/ControlsGump.*: displays the current bindings, and uses
	  BindGump to change the settings
	* gumps/*: Close gump changed from backspace to escape for some gumps
	* kernel/GUIApp.*: Gumps handled before HIDBindings for mouse buttons.
	  CTRL-Q to quick quit. Normal quit handled in HIDManager
	* kernel/HIDManager.*: added method to get the current controls for one
	  HIDBinding.
	  Quit and toggleConsole added.
	  Added clearBindings method to remove all controls to a HIDBinding.

2004-05-06  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/PaperdollGump.cpp: use setRelativePosition to put MiniStatsGump
	  in the bottom-right corner

2004-05-06  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* gumps/Gump.*: added a setRelativePosition - moves the gump to a
	  position relative to the parent gump
	* gumps/QuitGump.*: setRelativePosition to CENTER
	* gumps/MenuGump.*: setRelativePosition to CENTER

2004-05-06  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* gumps/QuitGump.*: gump to verify if the user wishes to quit
	* gumps/MenuGump.*: start of menu with some functionality that looks
	  like u8's menu
	* games/u8bindings.*: binding to show the menu
	* kernel/HIDManager.cpp: added new binding

2004-05-06  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/ConsoleGump.*: fixed key input

2004-05-05  Matthew Jimenez <mjimenez@users.sourceforge.net>
	* gumps/GameMapGump.cpp: improved item dropping to drop above the
	  highest item under the cursor or the Avatar's z coordinate.

2004-05-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/ModalGump.*: grab keyboard when initializing a modal gump
	* gumps/ShapeViewerGump.*: shape viewer gump (F11 open, backsp. close)
	* kernel/GUIApp.cpp: always send KeyDown events in textmode
	* gumps/*: pass modifiers to KeyDown events
	* gumps/SliderGump.*: arrow keys
	* shape/Shape.*: getTotalDimensions gets shape's bounding box
	* shape/ShapeFlex.*: fixed crash when caching invalid shapes
	* docs/u8skf.txt: updated SKF format docs

2004-05-02  Dominik Reichardt <dominus@users.sourceforge.net>
	* Readme: updated with new config system

2004-05-01  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* conf/*: new config system

2004-04-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: gcc 3.4 fixes

2004-04-21  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp: fixed some outdated comments, typos
	* usecode/UCMachine.cpp: fixed return messages with WATCH_CLASS
	* usecode/UCMachine.cpp: re-enabled some errors (they were disabled
	  to workaround bugs which should now be fixed properly.)

2004-04-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/MainActor.cpp: fixed crash when teleporting to
	  non-existent destination egg
	
2004-04-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* docs/u8anim.txt: corrected some animation info
	* world/Egg.*: dump egg-specific info as well in dumpInfo()
	* world/actors/Actor.*: some extra actor intrinsics
	* gumps/TargetGump.*: target intrinsic
	* gumps/ModalGump.*: modal gumps get all mouse input

2004-04-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: patch #893176 by watt (HIDManager::Bind and cleanup)

2004-04-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: patch #935779 by watt (Animation cleanup)

2004-04-10  Max Horn <max@quendi.de>
	* misc/Console.h, misc/istring.h: Remove template specializations, they
	  caused link errors with Apple GCC 3.3, and seem to serve no purpose.

2004-04-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/EggHatcherProcess.cpp: check Z range too

2004-04-10  Ryan Nunn <colourles@users.sourceforge.net>
	* gumps/ConsoleGump.*, misc/Console.* : Added command history and
	  improved command line editing. You can now use cursors and use delete
	  and insert keys.
	* graphics/ShapeInfo.h : Adding a constructor
	* misc/Q_strcasecmp.*, misc/istring.* : Moved the strcasecmp functions 
	  into the istring files. Removed Q_strcasecmp.* from cvs
	* misc/util.*, misc/memset_n.h, various files: Putting global functions
	  into the Pentagram namespace and updating the rest of the code to 
	  reflect the changes.
	* kernel/GUIApp.cpp : Added MainActor prefix for the MainActor console
	  commands

2004-04-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/EggHatcherProcess.cpp: consider avatar dimensions

2004-04-09  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: compile errors
	* data/u8monsters.cfg: monster data
	* world/actors/MonsterInfo.h: monster data
	* world/actors/*Actor.*: combat mechanics

2004-04-09  Ryan Nunn <colourles@users.sourceforge.net>
	* misc/istring.* : New and improved istring. Hopefully it works for all
	* misc/util.* :  StringToArgs function (handles quoted strings)
	* various files : Changes for PocketPC 2003 compiling
	* various files : Moving console command stuff from ConsoleGump to 
	  Console. Console functions now have argv. Args now contains the 
	  entire command line (including command name). Note the new function 
	  params for console functions.

2004-04-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/MiniStatsGump.*: mini stats gump
	* gumps/PaperdollGump.cpp: open mini stats gump

2004-04-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/PaperdollGump.*: show stats, mini-stats button
	* world/actors/ActorAnimProcess.cpp: fix weapon overlay

2004-04-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* data/u8armour.cfg: U8 armour values
	* world/ArmourInfo.h, graphics/TypeFlags.*: load armour info
	* world/actors/Actor.*, world/actors/MainActor.*: use armour info

2004-04-03  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Animation.*: blocking animation indices
	* world/actors/MainActor.*: listmarks console command
	* world/actors/AvatarMoverProcess.*: combat actions

2004-03-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp: fixed spawn inline opcode (invalid thisptr)

2004-03-07  Max Horn <max@quendi.de>
	* audio/midi/LowLevelMidiDriver.cpp: Fix deadlock on quit (Ryan told me
	  this fix a long time ago, but for some reason it was never committed)

2004-03-06  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/WeaponOverlay.h: weapon overlay info
	* graphics/WpnOvlayDat.*, kernel/GameData.*: load wpnovlay.dat
	* world/actors/Actor.*: store current animation frame
	* data/u8weapons.cfg: u8 weapon data
	* graphics/ShapeInfo.h, graphics/TypeFlags.*: load weapon data
	* world/actors/MainActor.*: get current weapon overlay frame

2004-03-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/World.cpp: updated comments a bit
	* world/actors/AnimAction.h: added some flags
	* docs/u8wpnovlay.txt: some info

2004-02-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp: check for existance of u8save.000

2004-02-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/World.cpp: read all of npcdata.dat
	* world/actors/Actor.h: fixed mislabelled flag
	* docs/u8anim.txt: some flag-guessing

2004-02-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/MainActor.*: added teleport, mark, recall console cmds.
	* conf/Configuration.cpp: actually use readonly setting of config files

2004-02-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Kernel.*: added Kernel::processTypes console command
	* kernel/ObjectManager.*: added ObjectManager::objectTypes console cmd.

2004-02-01  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/ScrollGump.*: a scroll gump
	* graphics/font/Font.cpp: handle special scroll characters
	* graphics/font/TTFont.cpp: hacked in temporary unicode support
	  (so french, german work now with ttf)
	* gumps/BarkGump.cpp: adjusted text box size to match original better

2004-01-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* docs/u8encoding.txt: U8's character encoding
	* gumps/widgets/TextWidget.cpp: use correct width/height when rendering

2004-01-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* GUIApp.cpp, TextWidet.cpp: don't crash if @data/VeraBd.ttf not found

2004-01-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/Gump.*: don't allow child gumps to be dragged by default
	* gumps/DesktopGump.*: allow children of DesktopGump to be dragged
	* gumps/GameMapGump.*: fix paintEditorItems (it was inverted)
	* kernel/GUIApp.cpp: use VeraBd.ttf instead of Verdana

2004-01-25  Ryan Nunn <colourles@users.sourceforge.net>
	* gumps/Gump.cpp, gumps/ConsoleGump.*, kernel/GUIApp.*, misc/Console.*,
	  usecode/UCMachine.* : Added text input mode for gumps. Added Console
	  commands. Do a "cmdList" in the console to see all the currently 
	  supported commands (not many). Tab does command completion. Console 
	  is case-insensitive. Adding extra console commands is real easy. Just
	  use ConsoleGump::AddConsoleCommand() and then use 
	  ConsoleGump::RemoveConsoleCommand() when you want it gone.
	* misc/pent_include.h: Include istring in pent_include

2004-01-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/widgets/TextWidget.*: renamed SimpleTextWidget to TextWidget
	* BarkGump.*, TextWidget.*: added support for scrolling to next text

2004-01-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* */module.mk, Makefile.in, common.mk: fixed configuring/building
	  from outside of the source directory

2004-01-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* IDataSource.h: getRWops creates an SDL_RWops struct from IDataSource
	* TTFont.*: load font from IDataSource

2004-01-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/fonts: added directory
	* graphics/fonts/ShapeFont.*, ShapeRenderedText.*: the old Font class
	* graphics/fonts/TTFont.*, TTFRenderedText.*: experimental TTF support
	* kernel/GUIApp.cpp: initialize SDL_ttf
	* configure.ac: autodetect SDL_ttf
	* GUIApp.cpp, SimpleTextWidget.cpp: hack to use verdanab.ttf

2004-01-21  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/*: added a frame-by-frame mode (F12 toggles, space advances)

2004-01-20  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/HIDManager.cpp: added missing break
	* conf/*: dump() returns a string, not an istring

2004-01-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: input handling cleanup (patch #873100)

2004-01-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* conf/*: configuration keys are now case insensitive (patch #867505)

2004-01-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* docs/shapes.cmp.txt: u8shapes.cmp format

2004-01-04  Ryan Nunn <colourles@users.sourceforge.net>
	* First commit of the new year for 2 years running! 
	* misc/common_types.h : Added ObjId and ProcId typedefs.
	* world/Item.*, world/Container.*, world/actors/Actor.*, some other 
	  files : Make 'Item::parent' an ObjId instead of a Container*. Means 
	  some things now work slightly differently. Item::parent will now be 
	  'undefined' for items that are in maps that are not loaded since the
	  parent Container wont have a ObjId.
  	* world/Item.* : Contained or Equiped items that are sent to the 
	  Ethereal void can now be returned to their previous parent.
	* Various files : Updated to use ObjId or ProcId. 

2003-12-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp: allow dragging of gumps when in stasis

2003-12-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/ModalGump.*: modal gump base class (not entirely done yet)
	* gumps/SliderGump.*: slider gump
	* gumps/widgets/SlidingWidget.*: sliding widget of a slider gump
	* gumps/widgets/ButtonWidget.*: allow both text and image buttons
	* world/Item.cpp: implement I_getSliderInput
	* kernel/CoreApp.*, kernel/Kernel.*: moved framenum from
	  CoreApp to Kernel

2003-12-20  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: merged rest of patch #857366
	* docs/savegame, world/actors/ActorAnimProcess.cpp: save 'aborted' bit
	* kernel/GUIApp.cpp: fixed Palette::matrix array size
	* world/Item.cpp: don't use l_next if undefined

2003-12-19  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/istring.*: case-insensitive string (patch #857366)

2003-12-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/Q_strcasecmp.*: return 1/-1 depending on which string is larger

2003-12-12  Ryan Nunn <colourles@users.sourceforge.net>
	* graphics/*RenderSurface.* : A few additions realted to a few 
	  experiments of mine. Some minor changes are planned for a few aspects
	  of how colour formats are handled.
	* audio/midi/LowLevelMidiDriver.h, audio/midi/WindowsMidiDriver.* :
	  Some midi SysEx stuff. Mostly experimental for now as it's not 
	  actually implemented entirely.
	* world/GravityProcess.cpp : A change that i should have committed 
	  long ago. Removes some broken code.
	* world/CurrentMap.cpp : Fixing something that may have been broken wrt
	  fastarea.
	* kernel/GUIApp.* : My Windows Hardware cursor stuff. Mostly 
	  experimental. Probably wont work with Win9x. Doesn't work in 
	  fullscreen (DirectInput messes things up). Other than that it works
	  great. :-)
	* FAQ : Time for an update
	* Other files : Adding some #includes where required, or getting rid 
	  of warnings.
	
2003-12-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/Font.*: moved Font class into namespace Pentagram

2003-12-06  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp: adjusted 'Hanoi' coordinates to a free spot
	* filesys/SavegameWriter.*: changed return types from void to bool
	* world/Item.*: added getFootpadWorld to return footpad in world coords
	* various: use getFootpadWorld
	* world/CurrentMap.h: rounding error in collision detection

2003-11-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AvatarMoverProcess.*: retreating/running in combat
	* world/Item.h, world/SpriteProcess.cpp, world/CurrentMap.cpp:
	  EXT_SPRITE flag

2003-11-30	Darke  <darkepaw@users.sf.net>
	Committing patch by Matthew Jimenez:
	* kernel/GUIApp.cpp, objects.mk, world/actors/*: Addeds support for
	  Avatar's combat stance and cleaned up animation stuff.
	
	* docs/scratch/credits.txt: Added Matthew to credits.
	* README: 'm' switches between combat mode and back.
	* AUTHORS: Added Dominus to authors.
	* ChangeLog: Updated changelog... oh, wait...

2003-11-16	Darke  <darkepaw@users.sf.net>
	* convert/Convert.h, tools/fold/*: Added mul (0x1E) and attempted
	  to fix issues correctly folding a 'spawn' call.

2003-10-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* src/RenderSurface.cpp: disable RESIZABLE flag for windowed mode

2003-10-05	Darke  <darkepaw@users.sf.net>
	* tools/fold/*: Fixed minor 'call' asm output bug. Attempted
	  cleaning up and 'prettyfying' the llc output format.
	
	* convert/Convert.h, tools/fold/*: Added 'push global' (0x4E)
	  opcode to fold.
	
2003-09-24	Darke  <darkepaw@users.sf.net>
	* tools/disasm/Disasm.cpp, tools/fold/*: General prettification of
	  output, minor fiddling with asm output format.

2003-09-17  Max Horn <max@quendi.de>
	* tools/fold/CallNodes.h: added missing #include <list>

2003-09-17	Darke  <darkepaw@users.sf.net>
	* convert/Convert.hi, tools/fold/*: free str (0x65), str to ptr (0x6B),
	and end of function/global_address (0x79) ops supported by fold.
	* kernel/CoreApp.cpp: Quietened some of the messages with MM_INFO.
	* misc/memset_n.h: Fixing up a casting warning.
	* tools/disasm/Disasm.cpp, convert/Convert.h: Generalised and
	shuffled the 'functionaddresstostring' function into the appropriate
	place/name in Convert.

2003-08-31	Darke  <darkepaw@users.sf.net>
	* convert/Convert.h, tools/fold/*: Folds push string(0x0D).

2003-09-01  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/*App.*: @save path

2003-08-31  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*: explode, receiveHit intrinsics (not complete yet)

2003-08-31  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/MonsterEgg.*: changed baseclass of MonsterEgg from Egg to Item
	* docs/savegame.txt: updated (note: savegames broken)

2003-08-31  Darke  <darkepaw@users.sf.net>
	* convert/Convert.h, tools/fold/*: More opcodes folded. sub(0x1C),
	  loop(0x70), loopnext(0x73), loopscr(0x74), so loopscript support
	  is in... except it doesn't work since jmp's are always assumed to
	  be positive (which they aren't). Fix coming sometime soon (I hope!).
	  
2003-08-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AvatarMoverProcess.*: move the avatar.

2003-08-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/CurrentMap.cpp: do a (time) range-check in sweepTest
	* world/actors/Actor.cpp: properly interpret sweepTest in tryAnim

2003-08-24	Darke  <darkepaw@users.sf.net>
	* convert/Convert.h, tools/fold/*: Added 'add' op. (Hey, if wjp can
	  have lots of tiny commits, so can I! *grin*)
	  
	* As above: Added 'spawn' and 'implies' to fold, cheating a little on
	  the latter. *grin*

	* As above: Added 'pop temp' and 'suspend'. Spawn function calls should
	  completely work now... hopefully.
	  
2003-08-23	Darke  <darkepaw@users.sf.net>
	* convert/Convert.h, tools/fold/*: Fixed Maximally Annoying Bug(tm),
	  and a few other minor things.
	  
2003-08-09  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AvatarMoverProcess.*: non-functioning avatar movement
	* world/actors/Pathfinder.*: a pathfinder which doesn't quite work yet
	* world/actors/PathfinderProcess.*: a process to make npcs pathfind
	* kernel/GUIApp.*: new keycombos (keypad + ctrl/alt/shift)
	* gumps/GameMapGump.*: avatar movement
	* world/actors/Actor.*, ActorAnimProcess.*, AnimAction.h:
	  animation tweaks

2003-07-28  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/AnimAction.*: moved anim start/end to separate function
	* world/actors/Actor.*: doAnim(), tryAnim()

2003-07-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* docs/savegame.txt: updated
	* world/actors/AnimAction.h: named some flags
	* world/actors/ActorAnimProcess.*: handle AnimAction flags

2003-07-20  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Container.*, world/actors/Actor.*: dumpInfo()
	* kernel/*: give Processes a pid on construction (except when loading)
	* usecode/*: make spawned UCProcesses run immediately, without
	  suspending the calling process

2003-07-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*: Item::dumpInfo()

2003-07-17  Max Horn <max@quendi.de>
	* misc/Palette.*: Moved struct Palette into namespace Pentagram
	* various: adapted to Palette now being in namespace Pentagram

2003-07-17  Dominik Reichardt <dominus@users.sourceforge.net>
	* kernel/GUIApp.cpp: changed Quicksave/load to F7/F8
	  (like the original)
	* readme: mentioned savegame keys

2003-07-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/idMan.*: moved idMan from kernel/ to misc/
	* misc/idMan.*: doxygen; idMan now expands dynamically
	* usecode/UCMachine.*: use idMan for strings/lists
	* docs/savegame.txt: updated

2003-07-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/ObjectManager.cpp: added loader for PaperdollGump
	
2003-07-16  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp, world/CurrentMap.*: save new FastArea
	* docs/savegame.txt: updated
	* filesys/SavegameWriter.cpp, kernel/GUIApp.cpp: output some save info

2003-07-16  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/midi/*.* : Fixing doxygen comments
	* audio/midi/fmpopl*.* : Added stereo support to FMOpl. Doesn't make a
	  huge difference, but it was trivial to add so I did it.
	* audio/midi/LowLevelMidiDriver.* : Changed the way the coms work. It
	  wont stall anymore when attempting to stop a track.
	* audio/midi/WindowsMidiDriver.* : Moved the #define NO lines to the 
	  cpp file because they could confict with other things
	* audio/midi/timidity/*.* : Correct support for Win32 paths, and some
	  tweaks
	* graphics/*.* : Make the palette transform matrix use fixed point 
	  rather than floating point
	* Like every other file I'm committing: Changes for new Item::move 
	  methods and fastArea

2003-07-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.*: mouse cursor
	* kernel/GUIApp.*: cleaned up dragging a bit

2003-07-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/ContainerGump.cpp: item combining

2003-07-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* README: updated with new keys (changing avatar Z is now home/end)
	* gumps/PaperdollGump.*: avatar paperdoll gump (no status yet)
	* gumps/ContainerGump.*: cleaned up a bit
	* gumps/GameMapGump.cpp: dump flags/extflags when displaying item info
	* world/Item.cpp: open PaperdollGump for Avatar

2003-07-06  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* README: added config/audio/midi_driver option
	* audio/midi/*: changed midi driver names
	  (they're now: windows, fmopl, timidity, coreaudio)
	* world/Item.*: openGump(), closeGump() functions
	* world/Object.cpp, world/Item.cpp: changed Object/Item savegame format
	* world/GlobEgg.*, world/Item.cpp: don't save unchanged in-glob items
	* usecode/UCMachine.cpp, usecode/BitSet.cpp: some bugfixes
	* world/actors/Actor.*: equipment
	* kernel/GUIApp.cpp: give Avatar backpack and some money at the start
	* kernel/GUIApp.cpp: i, b, r shortcuts
	* world/Item.cpp: some legalCreateInCont changes

2003-07-06  Max Horn <max@quendi.de>
	* audio/midi/CoreAudioMidiDriver.*: Fixed some GCC 3.3 warnings;
	  implemented increaseThreadPriority/yield.

2003-07-06  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/idMan.*, kernel/Kernel.*, kernel/ObjectManager.*:
	  an O(n^2) object loading algorithm probably wasn't such a good idea

2003-07-06  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* configure.ac, audio/midi/timidity/*: added --with-timidity=path
	  to configure to supply default timidity path
	* audio/midi/various: typos :-)
	* audio/midi/timidity/*: use config/audio/timiditycfg to get configfile

2003-07-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* configure.ac, bootstrap, Makefile.in: timidity
	* configure.ac: don't use SDL_mixer anymore

2003-07-05  Ryan Nunn <colourles@users.sourceforge.net>
	* filesys/ODataSource.h, tools/fold/*.* : Deque'ing the
	  OBufferDataSource. Changed it to ODequeDataSource. Added a real 
	  OBufferDataSource and also added OAutoBufferDataSource.
	* audio/midi/TimidityMidiDriver.*, audio/midi/timidity/*.* : Adding 
	  Timidity so we can use it natively. You will need USE_TIMIDITY_MIDI
	  defined.
	* kernel/GUIApp.*, audio/midi/*MidiDriver.* : Added some Midi driver
	  selection code. You can now select which driver you want with the
	  config key "config/audio/midi_driver". Just enter the class name.
	  If you set that to "disabled" midi with be disabled. Also, SDL_Mixer
	  is no longer required for FMOpl.
	* audio/MusicProcess.cpp : Making it so it remembers which song it 
	  should be playing if there is no midi driver.
	* audio/midi/XMidiEventList.cpp, audio/midi/XMidiFile.cpp : Fixing up
	  a few problems.
	* filesys/SavegameWriter.* : Now uses a OAutoBufferData source instead 
	  of ODequeDataSource
	* misc/Q_strcasecmp.*, audio/midi/fmopl.* : Just being paranoid with 
	  namespaces.
	* usecode/UCMachine.cpp : Getting rid of a stupid warning
	
2003-07-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp: some error checks

2003-07-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* everything: saving/loading
	* usecode/BitSet.*: a bitset for the globals
	* docs/savegame.txt: savegame format
	* kernel/ObjectManager.*: moved objects from Kernel to ObjectManager
	* filesys/NamedFlex.h: abstract class for files with named contents

2003-07-03  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* configure.ac: detect SDL_mixer, FMOPL option

2003-07-03  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/MusicProcess.cpp : Fixing a problem with tracks that have been
	  stopped.

2003-07-03  Ryan Nunn <colourles@users.sourceforge.net>
	* audio/midi/MidiDriver.h : Added some extra functions. 
	  setSequenceSpeed() and a few for the FMOplMidiDriver (and could 
	  probably be used by others, but probably wont be). Also added 
	  destroyMidiDriver function. Init now returns 0 on success and an
	  driver specific non zero error code on failure.
	* audio/midi/LowLevelMidiDriver.* : Changes so FMOplMidiDriver can 
	  inherir this. What I've done isn't the most 'oo' way of doing things,
	  but I don't care at the moment.
	* audio/midi/XMidiSequence.* : Speed changing, and fixing a few bugs.
	* audio/midi/fmopl.* : The emulated OPL2 device
	* audio/midi/FMOplMidiDriver.* : The Midi Driver for the Emulated OPL2
	  device. To use it, you need to define USE_FMOPL_MIDI and link to 
	  SDL Mixer.
	* audio/MusicFlex.h : Changing the adlib timbre function
	* audio/MusicProcess.cpp : Hacking the speed of the fades to 200% (the
	  original did do this too)
	* kernel/GUIApp.* : Added improved Midi Initialization code. Put it in
	  it's own function. Added code to deinit the midi devices. Added 
	  FMOplMidiDriver to the list of supported Midi devices. Added some 
	  basic SDL Mixer initializtion code. Made it so The Keypad + and -
	  keys adjust the volume.
	* usecode/UCMachine.*, kernel/Object.cpp : Getting rid of the 
	  UCMachine::addProcess() and UCMachine::killProcess() functions.

2003-07-02  Max Horn <max@quendi.de>
	* misc/Rect.h: Moved struct Rect into namespace Pentagram (it conflicts
	  with a struct in the Mac OS X system headers); removed xr/yb members
	  (besides adding 8 byte more memory, they were useless, and in fact
	  since a lot of stuff modifies x/y/w/h directly, they quickly got out
	  of sync)
	* various: adapted to struct Rect now being in namespace Pentagram
	* audio/midi/CoreAudioMidiDriver.*: Mac OS X Midi driver using
	  CoreAudio, based on the equivalent ScummVM driver
	* kernel/GUIApp.cpp: On Mac OS X, instantiate CoreAudioMidiDriver
	* configure.ac: Added -framework AudioUnits, needed by
	  CoreAudioMidiDriver 

2003-07-02  Ryan Nunn <colourles@users.sourceforge.net>
	* world/SpriteProcess.cpp : Set FLG_DISPOSABLE, even though it's not
	  yet implemented
	  
	* Most files committed : Added Midi music. Of course at the moment 
	  there is only a WindowsMidiDriver, so the rest of you people will 
	  need to get your own. At this stage, you'll need to modify the code 
	  in GUIApp.cpp to load the driver. Just search for WindowsMidiDriver.
	  
	  Implementing drivers by using LowLevelMidiDriver is the recommened 
	  method. Just inherit it, and implement the open(), close() and send()
	  functions. This is the same as the ScummVM drivers, so you can just 
	  steal those, and modify them to inherit the right class and also to 
	  remove the ScummVM specific code. I've also added 2 extra functions,
	  that I strongly recommend that you implement. First one is 
	  increaseThreadPriority() which is supposed to increase the execution
	  priority of the 'playing' thread (which is the current thread when
	  called). This function is desired because the main Pentagram thread
	  likes to have so much CPU time, that it will cause timing problems
	  for the Midi playing thread. The other function is yield() which will
	  yeild execution of the current thread. This is of course so the play
	  thread with higher priority wont steal all your CPU time.

	  At this stage, implementing driver just with MidiDriver is not a good
	  idea. Some things may change here, and MusicProcess assumes that the
	  driver can play 2 sequences simultaneous. That will be changed at 
	  some stage.

2003-06-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GameDetector.cpp: fixed crash for non-U8 games

2003-06-27  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Kernel.*, world/World.cpp: kill any process belonging to an
	  object on map change

2003-06-27  Ryan Nunn <colourles@users.sourceforge.net>
	* convert/crusader/ConvertUsecodeCrusader.h : Some No Regret 1.21 
	  intrinsics.

2003-06-27  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp: don't crash when dragging invalid item
	* world/Item.cpp: fixed or hanging items don't fall

2003-06-27  Ryan Nunn <colourles@users.sourceforge.net>
	* gumps/GameMapGump.cpp, world/CameraProcess.cpp : Fixing roof popping 
	  so it checks above where the camera is, not where the avatar is.
	* world/CameraProcess.*, usecode/u8intrinsics.h : Added Earthquakes.
	* usecode/UCMachine.* : Making the for each loops safe so multiple
	  processes and nested loops don't step on each others toes.
	* tools/fold/FuncNodes.cpp : Making compatible with MSVC.
	* world/ItemSorter.cpp : The item sorter will now resize if it's too 
	  small. However, this will occur next frame, not this frame, so the 
	  current sorted list is not invalidated.
	* filesys/ListFiles.h : Some std stuff in the windows code
	* docs/scratch/saving : Added Earthquake stuff.

2003-06-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/Gump.*, gumps/GumpNotifyProcess.*: pointers -> ids

2003-06-25  Max Horn <max@quendi.de>
	* usecode/UCMachine.cpp, usecode/UCProcess.cpp, usecode/UCStack.h:
	  rewrote UCStack to not inherit from IDataSource
	* kernel/CoreApp.h, kernel/GUIApp.h, kernel/Process.h: turned some
	  plain comments into doxygen comments

2003-06-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.*: conf/ supports multiple config files/roots,
	  so might as well use it.
	* world/Item.*, various: use objids for 'gump' and 'glob_next'
	* world/Item.h: changed 'shape' from const to private. We'll just need
	  to make sure we always use setShape in Item.
	* docs/scratch/saving: a what-to-save list
	* world/GlobEgg.*: use objid for contents

2003-06-24  Max Horn <max@quendi.de>
	* various: fixed strict GCC 3.3 warnings

2003-06-24  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCList.*: fixed string leaks
	* usecode/UCProcess.*, usecode/UCMachine.cpp: implemented opcode 6C

2003-06-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/MainActor.*: accumulateStr/Dex/Int, doxygen
	* kernel/GameDetector.*: some simple game/language detection code
	* kernel/GameDetector.*: detect spanish

2003-06-22	  Ryan Nunn <colourles@users.sourceforge.net>
	* world/actors/Actor.h : private to protected

2003-06-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/*App.*: refactored startup sequence
	* kernel/CoreApp.*: game selection changes
	* conf/XMLTree.cpp: fix crash on write()
	* various: cleanup and doxygen comments
	* kernel/GameInfo.h: GameInfo struct for game version info

2003-06-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*, gumps/GameMapGump.*: fixed bug with items disappearing
	  after dragging.
	* world/Item.*, gumps/GameMapGump.*: Made items fall down when
	  supporting item is dragged away. Implemented I_grab().
	* world/CurrentMap.cpp: clear FLG_MONSTER_NPC items on map change
	* gumps/Gump.*: converted some comments to doxygen comments

2003-06-21	  Ryan Nunn <colourles@users.sourceforge.net>
	* world/CurrentMap.cpp : Fixing the searches
	* world/CurrentMap.h : Updated docs
	* world/Item.cpp : Tweaking collisions
	* world/SpriteProcess.*, usecode/u8intrinsics.h : Sprites

2003-06-21  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Object.h, world/Item.h, world/Container.h: doxygen comments
	* world/Container.*: reset parent in Container::RemoveItem
	* gumps/ContainerGump.*: check whether item fits while dragging
	* kernel/GUIApp.cpp: don't allow dragging items while in stasis

2003-06-21	  Ryan Nunn <colourles@users.sourceforge.net>
	* kernel/GUIApp.cpp, world/CurrentMap.*,
	  world/actors/ActorAnimProcess.cpp, world/Item.*,
	  world/MissileProcess.cpp, world/GravityProcess.cpp:
	  Added item->collideMove() function. You should use this function to
	  moves whenever possible since is will properly call all the hit and
	  wasHit functions.
	* usecode/UCMachine.cpp, world/CurrentMap.* : Surface Search
	* usecode/u8intrinsics.h, world/Item.* : I_getSurfaceWeight and
	  I_isExplosive
	* world/CurrentMap.h : Testing doxygen comments
		
2003-06-21  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/ConsoleGump.h: PointOnGump always returns false
	* gumps/Gump.*: added FindGump(x,y) to find the gump on that location
	* gumps/Gump.*, kernel/GUIApp.*: item dragging
	* gumps/GameMapGump.*, gumps/ContainerGump.*: support dragging items
	  from/to world and containers
	* various: cleaned up a bit

2003-06-21	  Ryan Nunn <colourles@users.sourceforge.net>
	* gumps/GameMapGump.cpp : 'Fixing' GetLocationOfItem so it actually
	  works correctly.

2003-06-20	  Ryan Nunn <colourles@users.sourceforge.net>
	* filesys/IDataSource.h : IBufferData sources now accepts void *
	* graphics/Palette*.*, graphics/XFormBlend.*, graphics/Texture.*, 
	  graphics/*SoftRenderSurface.*, kernel/GUIApp.cpp : Re-working how
	  XForm works. Added Palette transformations.
	* kernel/GameData.* : Loads music.flx. This is for a few tests I'm
	  doing.
	* graphics/PaletteFaderProcess.*, usecode/u8intrinsics.h : Added a
	  bunch of palette effect functions.
	* world/Item.*, usecode/u8intrinsics.h : Added I_guardianBark.
	  I_getQuality only return q IF the family is SF_QUALITY
	* world/ItemSorter.cpp : Fixing silly problem
	* gumps/GameMapGump.cpp : Don't roof pop items with DRAW type flag
	* kernel/Kernel.cpp : ObjID 666 is reserved (it's used in a nasty hack
	  for guardianBark, and I don't want it used by anything else)
	* world/Egg.h, world/CurrentMap.cpp : Reset eggs on map writeback
	* world/World.cpp : Disabled killing of all processes on map change
		
2003-06-19  Dominik Reichardt <dominus@users.sourceforge.net> 
	* README: added section of games/versions supported by pentagram,
	  and 'c', 'h' and shift key

2003-06-19  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/SoftRenderSurface.cpp, graphics/Font.cpp: fixed crash
	  with French version of U8
	* kernel/GameData.cpp: small hack to try loading fusecode/gusecode

2003-06-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp: cleaned up item loop a bit
	* usecode/UCMachine.cpp: semi-fixed push/pop global
	* usecode/UCMachine.cpp: reverse list creation order

2003-06-18	  Ryan Nunn <colourles@users.sourceforge.net>
	* graphics/*RenderSurface.*, graphics/XFormBlend.*, world/Item.h,
	  world/ItemSorter.* : Added a funky highlighted shape mode. Set shapes
	  extFlag EXT_HIGHLIGHT to set it.
	* world/CurrentMap.*, kernel/GUIApp.cpp : Rewrote much of the sweepTest
	  code. Updated the gotHit hack to reflect the changes. Now also call
	  Release when you step off/away from an item you have hit. Any items
	  you are hitting are now shown highlighted when hitting is enabled
	  ('h'). This is purely a debug thing.

2003-06-18	  Ryan Nunn <colourles@users.sourceforge.net>
	* gumps/ContainerGump.cpp, gumps/GameMapGump.*, kernel/Object.*,
	  world/Egg.cpp, world/Item.* : Changed things so callUsecodeEvent is
	  private. Added separate functions to call each event. Added functions
	  for all usecode events, including hit, gotHit, cast,
	  AvatarStoleSomething and guardianBark that push args to the stack.
	  Arg pushing is now supported
	* world/CurrentMap.*,  : Added CurrentMap::sweepTest() to do more
	  accurate collision detection. It will detect things that are being
	  touched, even if aren't trying to pass through it.
	* kernel/GUIApp.cpp : Hacked in the calling gotHit when the avatar
	  moves. By default this is OFF cause falling into water is annoying.
	  Toggle with 'h'.

2003-06-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/ItemSorter.cpp: check for valid frame
	* world/ItemMoveProcess.*: renamed ItemMoveProcess to MissileProcess
	* Makefile.mingw: use objects.mk

2003-06-17	  Ryan Nunn <colourles@users.sourceforge.net>
	* gumps/ConsoleGump.*, misc/Console.*, kernel/GUIApp.cpp : Added 4 line
	  console overlay when the console is up. Console now also
	  automatically raises after Pentagram is loaded.
	* kernel/GUIApp.cpp : Included a hacky 'clipped' mode for Avatar
	  movement. Use 'C' to toggle it. It's off by default. Also added a
	  quarter speed move mode. Hold do either shift to slow things down.

2003-06-16  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/MonsterEgg.cpp: set FLG_MONSTER_NPC on NPCs spawned by egg
	* world/GravityProcess.*: move an item with gravity (not yet done)
	* world/Item.*: hurl, fall intrinsics

2003-06-16	  Ryan Nunn <colourles@users.sourceforge.net>
	* convert/u8/ConvertUsecodeU8.h, usecode/u8intrinsics.h : Hurl is
	  actually a process so I made it use I_dummyProcess.
	* usecode/u8intrinsics.h, kernel/GUIApp.* : Added some getTimeIn???
	  instrinsics. These will not be the final versions of these. They are
	  purely place holders for now.
	* usecode/UCMachine.cpp, kernel/Kernel.cpp, kernel/Process.h :
	  Deferred process termination. This fixes problems with processes
	  terminating before implies is called.
	* world/CurrentMap.cpp : Execute NPC schedule funcs on map load. Also
	  added in code to execute cachein funcs on map load. However cachein
	  was messing up the start sequence, so the code is commented out for
	  now.
	* usecode/intrinsics.h, world/* : New intrinsic ARG Macros. Including
	  new WorldPoint struct.
	* kernel/GUIApp.*, usecode/u8intrinsics.h : Added
	  I_setTimeInGameHours() so beds now work. Also added time
	  (minutes + seconds) and gamehour display.

2003-06-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/MainActor.*: teleportToEgg intrinsic
	* world/Item.*: legalMoveToPoint intrinsic
	* world/CurrentMap.cpp: fixed collision typo

2003-06-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/AskGump.cpp: Free strings. Still some leaks remaining.
	* world/CurrentMap.*: canExistAt intrinsic
	* kernel/GUIApp.cpp: 't' outputs kernel/usecode/world stats
	* world/CurrentMap.cpp: fixed areaSearch range
	* kernel/GUIApp.*, gumps/GameMapGump.cpp: 'e' toggles editor items
	* world/World.cpp: output Avatar location in worldStats

2003-06-15	  Ryan Nunn <colourles@users.sourceforge.net>
	* convert/u8/ConvertUsecodeU8.h, usecode/UCMachine.* : Some nasty hacks
	  to show the u8 instrinsic names.
	* gumps/GameMapGump.* : Sort order debugging
	* gumps/Gump.* : Minor changes
	* gumps/GumpNotifyProcess.*, gumps/widgets/SimpleTextWidget.* :
	  p_dynamic_cast stuff
	* gumps/AskGump.*, kernel/GUIApp.cpp, world/Item.cpp : Ask Gump. No
	  more I_ask() hacks required.
	* gumps/widgets/ButtonWidget.* : This really isn't a button yet. All it
	  really is at the moment is a SimpleTextWidget that responds to mouse
	  events.
	* kernel/GUIApp.cpp : 'a' and 'z' keys can now be used to move the
	  avatar vertically. '[' and ']' work again. 's' can now be used to
	  toggle avatarInStasis.
	* world/TeleportEgg.h : Use framenum to determine if it is a teleporter
	  or a dest.

2003-06-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp: fixed jumps
	* world/Item.cpp: fixed legalCreateInContainer

2003-06-15	  Ryan Nunn <colourles@users.sourceforge.net>
	* world/ItemSorter.cpp : Fixing the positively absolutely busted
	  ItemSorter

2003-06-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/ItemSorter.cpp: invisible items don't occlude
	* graphics/AnimDat.cpp: deltaz is (of course) signed

2003-06-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/GumpShapeFlex.*: load gumpage.dat
	* gumps/ContainerGump.*: use data from gumpage.dat
	* gumps/GameMapGump.*: middle mouse button makes an item invisible...

2003-06-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp: change operand order of lsh/rsh. Fixes doors

2003-06-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/CurrentMap.*: collision/roof/support detection
	* gumps/CurrentMap.*: roof popping
	* usecode/UCMachine.*: don't have spawn run processes itself

2003-06-14	  Ryan Nunn <colourles@users.sourceforge.net>
	* gump/widgets/SimpleTextWidget.* : I can't quite remember, but i think
	  I just added something called the SimpleTextWidget.
	* gumps/BarkGump.* : Removed old text hack, added new hacks that use
	  SimpleTextWidget. Sometime in the future it will correctly use
	  something with a name like MultiPageTextWidget
	* gumps/Gump.h : Added some forward looking stuff aka a way for widget
	  to notify their parents of 'something', where 'something' is
	  something specific to the widget.
	* kernel/GUIApp.cpp : Added stuff to allow me to execute my plans to
	  TAKE OVER THE WORLD *cough* *cough* I mean, I added the
	  AvatarMoverProcess which I created for the Royal Society of the
	  Prevention of Harm To Keyboards.
	* misc/Console.cpp : You want unused variables, YOU CAN'T HANDLE UNUSED
	  VARIABLES!
	* world/LoopScript.h : Ritulastic Macro Abuse aka using the Preprocess
	  to compile LoopScripts using macros.

2003-06-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.cpp: cleaned up FIRST/EXCUTION hacks

2003-06-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.*, gumps/*: gump dragging

2003-06-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Kernel.*: moved objects from World to Kernel
	* lots: adjusted for above change
	* kernel/GUIApp.*, gumps/*: changed gump mouse input handling again
	* kernel/Kernel.*: new/signalled processes are run immediately

2003-06-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GUIApp.h: made GUIApp::get_instance() return a GUIApp*
	* kernel/GUIApp.*, gumps/*: mouse events
	* various: minor bugfixes, typos

2003-06-09  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/ContainerGump.*, gumps/ItemRelativeGump.*: getItemLocation
	* gumps/ContainerGump.*: close container gumps of contents when closing

2003-06-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* gumps/ContainerGump.*: a container gump. No interaction yet.
	* gumps/ContainerGump.*: item tracing

2003-06-06	Darke <darkepaw@users.sf.net>
	* misc/Console.*: Added support for a basic message filtering
	  system for output. Basicly instead of your normal
	  con.Printf(...) call, you instead call
	  `con.Printf(MM_INFO, ...)` (or whatever mask you want other
	  than MM_INFO...) and depending upon what the global mask is set
	  to allow, it will be appropriately printed or not. The default
	  is to print everything. For details as to what the general
	  masks mean, see the MsgMask enum in misc/Console.h. Most of the
	  examples are currently in kernel/CoreApp.cpp.
	* filesys/FileSystem.cpp: Added message filtering stuff.
	* kernel/CoreApp.*, kernel/ConApp.cpp: Added message filtering
	  stuff, and a basic 'help' command line message (triggered on -h
	  flag), only useful in llc at the moment, since support needs to
	  be added in the derived class.
	  Also added '-q' and '-qq' flags for 'quiet' and 'very quiet'
	  output, but since most of the GUIApp and related output hasn't
	  been correctly setup according to the new setup in Console,
	  you're not going to notice much. I'm getting there slowly...
	  *grin*
	* filesys/IDataSource.h: Fixed casting warning.

2003-06-03  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/ItemSorter.*, gumps/GameMapGump.*: move camera-related
	  calculations to the end of the rendering 'pipeline' to prevent
	  some tearing between items

2003-06-03	  Ryan Nunn <colourles@users.sourceforge.net>
	* gump/ItemRelativeGump.* : Fixing broken ItemRelativeGump

2003-06-03	Darke <darkepaw@users.sf.net>
	* filesys/ListFiles.h: A quick update to properly re-munge the
	  filenames.

2003-06-03	  Ryan Nunn <colourles@users.sourceforge.net>
	* filesys/IDataSource.h : Theoretically fixing the readline()
	  problem.

2003-06-03	  Ryan Nunn <colourles@users.sourceforge.net>
	* kernel/Process.h : A few new useful methods
	* kernel/Object.cpp : When an ObjID is cleared, all processes
	  belonging to that ObjID are now terminated.
	* graphics/Font.*, graphics/SoftRenderSurface.cpp : Added
	  Baseline, hlead and vlead stuff.
	* gumps/* : Changed SetupLerp to 'run'. Improved item dependant
	  gump handling. Any item dependant gump will now have a
	  GumpNotifyProcess owned by the item the gump is dependant on.
	  When the process is terminated, it will close the gump. Added
	  MapChanged() methods, so the gumps can do various maintenance
	  duties when changing maps.
	* gumps/BarkGump.* : Improved font stuff
	* misc/Console.* : Removed dependencies from even CoreApp.
	* kernel/GUIApp.* : Changes to get around forcing Console to be
	  dependant on an App. Changed where the new
	  desktop->Run(framenum) is called
	* graphics/Shape.* : Added new constructor (from IDataSource)
	* kernel/GameData.* : Mouse shape (not yet used)
	* world/EggHatcherProcess.cpp : Correcting egg range.
	* world/Item.* : Fixing animation speeds. Fixing busted lerping.
	* world/World.cpp : Call MapChanged() on gumps

2003-06-03	Darke <darkepaw@users.sf.net>
	* objects.mk, module.mk, tools/disasm/module/mk,
	  tools/fold/module.mk: Shuffled the lists of objects into their
	  own file so I could 'easily' link the other stand alone apps.
	* tools/disasm/Disasm.cpp: Updating to get it working again.
	* tools/compile/llcTokens.h, tools/compile/llcLexer.*,
	  tools/compile/CompileUnit.h, tools/compile/CompileProcess.cpp,
	  tools/compile/Compil.cpp: Some updates to support loading
	  usecode from proper directories, etc, kind of half finished
	  since Colourless' big commit interrupted it a little. *grin*
	* tools/kernel/Kernel.cpp: Added obvious optimisation.
	* usecode/UCMachine.*, usecode/Usecode.h, tools/compile/llc.cpp,
	  kernel/[GUI|Core|Con]App.*: Suffled the usecode machine out of
	  CoreApp, given it's dependancy on... well... *everything*
	  there's no real way to abstract it enough atm, since things are
	  still in half-built stages. Soon though... *muhahahahaha!*
	* filesys/FileSystem.*, filesys/ListFiles.h: Added preliminary
	  support for getting a list of files inside a dir. Still needs a
	  bit of work (doesn't correctly translate raw paths, back to our
	  sandboxed @paths...)  and it only 'works' correctly under
	  linux/unix (I think, mingw might work though... and everything
	  else is #error-ed). So if Colourless is quick, he might be able
	  to get a completely working version working under 'doze before
	  I under linux! *grin*

2003-06-02  Ryan Nunn <colourles@users.sourceforge.net>
	* gumps/Gump.* : Fixing invalid focus_chlid problems
	* kernel/CoreApp.h, kernel/GUIApp.h, misc/Console.cpp : Console
	  no longer dependant on GUIApp.

2003-06-02  Ryan Nunn <colourles@users.sourceforge.net>
	* Almost every single file being committed here : Changes the
	  p_dynamic_cast macros. Just check P_dynamic_cast.h for the new
	  macros to use. Also made the macros define some new functions.
	  These are:
	  1) IsOfType() which can check to see if an object is of a
	   certain type. It can be used in 2 ways, either with
	   IsOfType(ClassToCheck::ClassType) or IsOfType<ClassToCheck>().
	  2) GetClassType(), which gets the ClassType for an object
	   virtually so it always gets the ClassType for the class the
	   object was created with.

	* Changes due to filesystem: No more raw accesses. Added readline
	  to IDataSource. Getting the ifstream from an IFileDataSource is
	  no longer such a hack. Added 'memory files'. Not entirely
	  feature complete, but what I've done lets me play with using
	  Windows Resources for data files.

	* docs/scratch/quotes.txt : Some long overdue quotes that were
	  supposed to be added but I held off. And no Darke, there are no
	  toys here ;-)

	* GUMPS! : Lots of gump related stuff, so much stuff I doubt I
	  could list it all. Suffice to say the rendering hacks in GUIApp
	  are long gone. Console and GameMap are now drawn using their
	  primitive Gumps. Much of Gump framework is done, however, I
	  have no idea if input handling will work anything near
	  correctly. All the old input hacks are still in place. Added
	  ItemRelativeGump. Added BarkGump. It's not entirely finished
	  because it should use a TextWidget or some such rather than
	  having all the code to handle text drawing in it. Got
	  Item::I_ask to create a BarkGump to list the choices. Of course
	  that is in no way a correct solution. Added u8gumps.flx to
	  GameData. It's just of type ShapeFlex for now but I don't think
	  it needs any changes, not now anyway

	* Font related: Added some hacks that only allow the length of a
	  line of text to be about 160 pixels. This is a hack to force
	  word wrapping with BarkGumps. Added a getHeight() method that
	  can get the height of a font and also getTextSize() which will
	  calculate a rect that will fit the text (baseline and stuff
	  will cause problems here).

	* Various files: Fixing up various bug and stuff.

2003-06-01  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/idMan.*: added function to mark any ID as used
	* world/MonsterEgg.*: monster hatching
	* world/actors/Actor.*: createActor intrinsic
	* world/Item.cpp: fixed pop to container

2003-05-31  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/EggHatcherProcess.*: an egg hatcher
	* world/CurrentMap.*: hatch eggs
	* world/TeleportEgg.*, world/actors/MainActor.*: teleporting

2003-05-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/AnimDat.cpp, world/actors/AnimAction.h: read more
	anim. data
	* docs/u8anim.txt: changed some flag guesses
	* world/*Egg*: use original's way of storing egg data

2003-05-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/CurrentMap.*: findDestination to locate a teleportegg
	* world/MonsterEgg.*: stub-ish monsteregg
	* world/TeleportEgg.*: stub-ish teleportegg

2003-05-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/FontShapeFlex.*, graphics/Font.*: fonts
	* graphics/*ShapeFlex*: default palette for a ShapeFlex
	* graphics/*RenderSurface*: PrintChar
	* graphics/*RenderSurface*: a very very basic PrintText

2003-05-29	Darke <darkepaw@users.sf.net>
	* configure.ac: Adding semi-b0rk3n support for linking into a
	  seperate console-only binary. Almost completely useless, overly
	  linked to objects and in the wrong place (since I was wanting
	  to not have to duplicate the significant list of overlapping
	  objects for console vs. gui binaries), and I couldn't get the
	  module.mk to support it properly. No point to modifying the
	  .mingw makefile with this binary at the moment, wait until I
	  get around to disentangling everything. *grin*
	* kernel/[Core|GUI]App.*: Cleanup of random left-over crud.
	* module.mk, llcLexer.cpp: Pointless cleanup of warnings when I
	  was bored at work. *grin*
	* usecode/UCMachine.*: Minor additional abstraction.
	* kernel/ConApp.*,llc.cpp: Console application abstraction.

2003-05-29  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* configure.ac: 'sed' is one of the standard utilities configure
	uses, so checking for it won't help. Things will break horribly
	without it.
	* configure.ac: cleaned up the platform-specific #define's a bit

2003-05-28	Darke <darkepaw@users.sf.net>
	* configure.ac: Checks for `sed` and reports a warning if it's
	  lacking.
	* tools/compile/module.mk: Runs a few sed scripts so that it
	  shouldn't  be necessary to hack-make a correct FlexLexer.h or
	  prepend a #include "pent_include.h"
	* tools/compile/llcLexer.cpp: The updated 'should work' file.
	  Of course this needs a little testing on a system that's just
	  slightly more broken then mine. *grin*

2003-05-27	Darke <darkepaw@users.sf.net>
	* kernel/CoreApp.*, kernel/GUIApp.*: Split up Application into a
	  'Core' base class and a 'GUI' subsystem, and removed the
	  original kernel/Application.* files.
	* module.mk, pentagram.cpp, tools/compile/Compile.cpp,
	  tools/compile/CompileProcess.cpp,
	  tools/disasm/DisasmProcess.cpp, usecode/UCMachine.cpp,
	  usecode/u8intrinsics.h, world/CameraProcess.cpp,
	  world/Item.cpp: Flow on effect from above.

2003-05-26  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/*: use animation frame repeat flag
	* usecode/UCProcess.*, kernel/Process.*: moved itemnum/type to
	  Process
	* kernel/GameData.*: load u8fonts.flx

2003-05-26  Ryan Nunn <colourles@users.sourceforge.net>
	* kernel/Application.cpp, world/CameraProcess.* : A tweek to the
	  lerping when following an item.

2003-05-26	Darke <darkepaw@users.sf.net>
	* configure.ac: Couple of relevant only to the usecode compiler
	  config flags.
	* module.mk: More random sorting...
	* kernel/Application.h: Hiding what I shouldn't have unhidden.
	  *grin*
	* tools/compile/*: More compiler stuff, still doesn't do anything
	  really.
	* world/Item.cpp: Removal of old-style casts.

	* tools/compile/llcLexer.cpp: Added 'cause flex2.5.4 hasn't
	  really been maintained in the last 7 years...

2003-05-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp: process exclude

2003-05-25  Ryan Nunn <colourles@users.sourceforge.net>
	* kernel/Application.* : Timing and interpolation, Fast Area,
	  Camera, avatarInStasis
	* kernel/Kernel.cpp : Fixing erase bug
	* usecode/u8intrinsics.h : Camera, avatarInStasis
	* usecode/UCMachine.cpp : Fixing huge bug
	* world/CameraProcess.* : Camera
	* world/Item.* : Interpolation changes. Fast Area, Animate, Added
	  some optimizations for getting a Shape and ShapeInfo.
	  Consequently the 'shape' member is now const and needs to be
	  set with setShape() (yes this is a bit of a hack)
	* world/ItemFactory.cpp : use setShape()
	* world/ItemSorter.cpp : An optimization

2003-05-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Application.cpp: getCurrentTimerTick

2003-05-25  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCProcess.cpp: don't push this pointer if it's zero

2003-05-25	Darke <darkepaw@users.sf.net>
	* configure.ac: Removed dependancy on awk and yacc, since we use
	neither, and added flex dependancy since we're now using it.
	* module.mk: Started cleaning it up a little so we might,
	  someday, be able to compile an application without dragging
	  *everything* in...
	* tools/compile/module.mk: Added handling of .l files.
	* tools/compile/CompileProcess.*: Added some minor compiler
	  functionality.
	* tools/compile/Compile.cpp, tools/compile/CompileUnit.h,
	  tools/compile/llcLexer.[h|l], tools/compile/llcTokens.h:
	  More compiler related files.

	* tools/compile/CompileNodes.h: There's got to be a rule that for
	  *every* major commit I must forget adding at least one file...
	  *sigh*

	* tools/compile/llcLexer.l: Quick cleanup of cruft.

2003-05-20  Ryan Nunn <colourles@users.sourceforge.net>
	* world/actors/ActorAnimProcess.cpp: Avoiding problems with
	  bounds.

2003-05-20  Ryan Nunn <colourles@users.sourceforge.net>
	* usecode/UCMachine.cpp : 1 Based lists
	* kernel/Application.cpp : A hack to support 'different' versions
	  of U8 with f and g keys

2003-05-20  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/ActorAnimProcess.cpp: smoothen repeating animations

2003-05-20  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Actor.*: intrinsics
	* kernel/Application.cpp: press g to trigger execution if you're lucky

2003-05-20  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*: some more functions and corresponding intrinsics
	* world/ItemMoveProcess.*: made curve optional
	* world/actors/Actor.*: hacked in ItemMoveProcess for "pathfinding"

2003-05-19  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.cpp: changed create item intrinsics a bit
	* world/ItemMoveProcess.*: process that moves items around

2003-05-19	Darke <darkepaw@users.sf.net>
	* misc/Args.*, kernel/Application.*: Fixed argument const correctness
	  at wjp's insistance. *grin*

2003-05-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/Direction.h: world-direction function

2003-05-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*: intrinsics
	* usecode/*: rearranged spawn opcode (again)

2003-05-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/Rect.h: Rect::Overlaps
	* world/CurrentMap.*: area searches
	* world/Container.*: container searches
	* world/UCMachine.*: searching
	* kernel/Application.cpp: press f to trigger first egg if you're lucky

2003-05-18  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/Actor.*: basics of actor flags

2003-05-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Kernel.*: kernel intrinsics
	* world/World.*, world/actors/Actor.*: some actor attributes/intrinsics

2003-05-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/World*, world/Item.*: ethereal items, push/pop intrinsics
	* world/actors/Actor.*, world/Item.*: more intrinsics

2003-05-17  Darke <darkepaw@users.sf.net>
	* */.cvsignore: Added CVSROOT/cvsignore, so removed all .deps/Makefile
	  entries and entire files if that's all they held.

	* filesys/FileSystem.*: Add ability for it to create directories on
	  request should they not exist.
	* kernel/Applications.*: Added 'work' directory stuff. Directory gets
	  mounted on @work, and is defined either by the config file:
	  <config>
	      <u8>
	           <path> /path/to/u8 </>
	           <work> /path/to/u8/work/dir </>
	      </>
	  </>
	  Default value is (under linux at least) $HOME/.pentagram/u8-work
	  or $HOME/.pentagram/gamename-work for a game named 'gamename'.
	  Also has yet-another --param option too, that doesn't exist.
	* misc/Args.*: Constness.
	* tools/compile/*: Doesn't exist. You're imaging there's something
	  there that does nothing. There's nothing there, and it most certainly
	  does nothing.

2003-05-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/World.*, kernel/GameData.*: moved fixed from World to GameData
	* item/Item.h: added FLG_FASTAREA
	* item/Item.cpp: make Item::getFootpad use FLG_FLIPPED

2003-05-17  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/*: check for invalid direction in animations

2003-05-16  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/ActorAnimProcess.*: forgot p_dynamic_cast
	* world/*: marked some issues with equipped items
	* world/Container.*: set FLG_CONTAINED flag properly
	* world/Container.*, world/Item.*: more intrinsics

2003-05-16  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.cpp: got rid of some unused vars
	* world/actors/*: only allow one simultaneous animation per actor

2003-05-16  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* docs/design/items.txt: some notes about Item
	* world/CurrentMap.*, world/Item.*: move items somewhat more correctly
	* world/actors/ActorAnimProcess.*: keep link back to Actor as objID

2003-05-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/*, graphics/AnimDat.*: read/play animations
	* kernel/Application.cpp: press 't' to make Devon walk a bit

2003-05-15  Ryan Nunn <colourles@users.sourceforge.net>
	* world/Map.cpp, world/World.cpp : Fixing 'lamp' problem (coords must
	  be read as unsigned)
	* kernel/Application.cpp, world/ItemSorter.* : Sort debugging ([ and ])
	  and fixing a few incorrect sort order problems.

2003-05-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Application.cpp, usecode/UCMachine.*: target intrinsic hack
	* world/Item.*: some item creation intrinsics

2003-05-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.cpp, graphics/ShapeInfo.*: moved getTypeFlag to ShapeInfo

2003-05-14  Ryan Nunn <colourles@users.sourceforge.net>
	* Lots of files: Getting rid of warning due to type conversion, unused
	  args and other such stuff.

	* convert/u8/ConvertUsecodeU8.h : Marking processes, and fixing a few
	  miskates.

	* graphics/ShapeInfo.h, graphics/TypeFlags.cpp : Added some new unknown
	  typeflags.

	* kernel/Application.cpp, misc/Console.* : Clicking an item will return
	  its quality. Added ability to scroll console with Pageup and Pagedown

	* world/Item.cpp : Changed the NPC classid detecion in callUsecodeEvent
	  since npcs aren't the only items to have somehing in npcnum. Fixed up
	  I_getTypeFlag which was seriously broken. The new code is horrible
	  to look at.

	* world/Item.h : Added FLG_MONSTER_NPC. But, I'm not sure if that is
	  correct.

	* world/ItemSorter.cpp : Added a few consts. A few other minor changes.

	* usecode/u8intrinsics.h : All unimplemented processes should now be
	  dummy processes.

2003-05-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.cpp: use quality+0x47F as usecode class for unkeggs
	* usecode/UCMachine.*: some utility intrinsics

2003-05-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Application.cpp: arrows scroll map; esc/q quit
	* kernel/Application.cpp: backtick/tilde hides console

2003-05-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.*: cleaned up pointer dereferencing
	* world/Item.*: intrinsics

2003-05-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/*: dummy getName() intrinsic (returns 'Avatar')
	* usecode/u8intrinsics.h, world/Item.*: intrinsics

2003-05-12  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Item.*: loopscript support in Item
	* world/*: changed some fields in Item to uint16
	* usecode/UCMachine.*: one (out of three) loopscript opcodes
	* usecode/UCStack.h: UCStack::push1(uint8)

2003-05-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp, usecode/UCProcess.cpp:
	spawn now puts arguments on the stack before the this pointer
	* usecode/UCMachine.cpp: push globals pushes 1 byte flags as 16 bit

2003-05-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp: cleaned up a bit

2003-05-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Application.cpp: right-click uses an item
	* usecode/UCMachine.cpp: bugfixes
	* usecode/u8intrinsics.h: 'process' intrinsics return a dummy process

2003-05-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/*: minor changes
	* world/Item.cpp, kernel/Application.cpp: hacked in the Ask intrinsic
	* graphics/ShapeInfo.h, world/ItemFactory.cpp: added unknown family 15

2003-05-11  Darke <darkepaw@users.sf.net>
	* tools/disasm/DisasmProcess.*: New disassembler process files.
	* kernel/Application.*: Added stub of disassembler process; parameter
	  handling; and new config file format, the default u8 and data paths
	  have been shuffled to something that looks like this:
	  <config>
	      <u8>
	          <path> /home/darke/game/pagan2.13 </>
	      </>
	      <general>
	          <data> /home/darke/code/pentagram/data </>
	      </>
	  </config>
	* random-files: Updated copyright to 2003.

2003-05-11  Ryan Nunn <colourles@users.sourceforge.net>
	* misc/memset_n.h : Added generic memset_32 and memset_16 functions.
	  Additionally added optimized memset_32 funcs (which are used by
	  memset_16). These might be useful in other places than in Fill32().

	* graphics/*RenderSurface.* : Added PaintInvisible methods. This is
	  used for shapes with the Invisible flag. Changed the asm Fill32()
	  funcs to use memset_16 and memset_32

	* graphics/XFormBlend.* : Invisibility blending.

	* world/ItemSorter.* : Added another AddItem() method. Added support
	  for PaintInvisible().

	* misc/Console.h : Added GetConFont() method.

	* kernel/Application.cpp : Frame timing info is no longer printf'd. It
	  is now snprintf'd and is drawn to the screen using
	  RenderSurface::PrintTextFixed().

2003-05-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Application.cpp: show shape/frame when clicking
	* kernel/Application.cpp: start on avatar's map

2003-05-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/*: some error checking
	* kernel/Application.cpp: removed usecode call on startup

2003-05-10  Ryan Nunn <colourles@users.sourceforge.net>
	* world/World.cpp : Fixing assignObjId();
	* world/Item.cpp : A hack for handling NPC usecode funcs
	* misc/p_dynamic_cast.h : NULL pointer wont crash
	* kernel/Application.cpp : Spawn Look process on click trace

2003-05-10  Ryan Nunn <colourles@users.sourceforge.net>
	* graphics/*RenderSurface.* : Implemented functions to set clipping
	  region. Added function to move the effective origin position.

	* graphics/SoftRenderSurface.inl, kernel/Application.cpp,
	  world/ItemSorter.* : Slightly changed the way the screen coords work.
	  The world is now drawn with the origin set to the centre of the
	  screen instead of at the top left.

	* graphics/ShapeFrame.* : Added hasPoint()

	* world/ItemSorter.* : Display List Tracing for click detection

	* kernel/Application.cpp : Added a simple tracing test for left
	  mouse button up.

	* misc/Rect.h : Added a few extra possibly useful features

2003-05-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/SoftRenderSurface.cpp: asm version of uint32-Fill32/gcc/x86

2003-05-05  Ryan Nunn <colourles@users.sourceforge.net>
	* kernel/Kernel.*, kernel/idMan.*, world/World.* : l33t id handling.

2003-05-05	Darke <darkepaw@users.sf.net>
	* kernel/Applications.*: Partial support for a simple font-config file.
	* data/fixedfont.cfg: Said basic config file.
	* configuration.ac: Added --enable-random-optimisations which currently
	  only adds -O3, and updated the warnings list used by
	  --endable-paranoid-warnings.

	Obviously Colourless' fault: *grin*

	* graphics/*RenderSurface.cpp : Double Buffering and Hardware surfaces
	* kernel/Application.cpp : Fullscreen can now be set with
	  config/video/fullscreen setting.

2003-05-04  Ryan Nunn <colourles@users.sourceforge.net>
	* world/ItemSorter.cpp : Enable 'fast' noclip painting.
	* world/World.* : Removed 'old' SetupDisplayList methods.
	* graphics/SoftRenderSurface.cpp : Some inline assember for fast buffer
	  clearing with MSVC. Since I wrote it, might as well commit it.
	* world/CurrentMap.h : Get per glob/chunk item lists.
	* kernel/Application.cpp : New fast item sorting.

2003-05-03 Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/*: add NPCs to CurrentMap's item lists
	* world/Egg.*: stub egg class

2003-05-03  Ryan Nunn <colourles@users.sourceforge.net>
	* kernel/Application.cpp : More info about rendering times

2003-05-03  Ryan Nunn <colourles@users.sourceforge.net>
	* kernel/Kernel.cpp : Uh oh, changed it so the kernel will NOT
	  terminate when there are no more processes.

	* kernel/Application.cpp : Pressing a key will now quit Pentagram. The
	  World will now be displayed as the background. This is temporary

	* world/ItemSorter.* : Added ItemSorter. Not completely finished
	  yet, but it works.

	 * world/GlobEgg.cpp : Fixed an allignment issue.

	 * world/Item.* : Status flags, and some interpolation stuff

	 * misc/Rect.h : Added operator ==

	 * world/World.* : Adding items to display list. Doing it like this is
	   temporary

	* filesys/IDataSource.h : Adding an unhack for the float stuff. Not
	  usable yet.

	* graphics/*RenderSurface.* : Adding a clipping check function.
	  Slightly optimized text rendering.

	* misc/pent_include.h : Added another CANT_HAPPEN macro. This one in
	  theory allows a string to be passed to the Macro that 'should' be
	  displayed when the assertion fails. However that is going to be
	  compiler and runtime dependant

2003-04-30 Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/*: very very basic event handling

2003-04-29  Darke <darkepaw@users.sf.net>
	* Various .h/.cpp files: Pointless Copyright year update when noticed.
	* kernel/Application.*: Abstraction of core constructor into
	  appropriately named functions.

2003-04-21  Darke  <darkepaw@users.sf.net>
	* convert/*: Altered prototype usecode function names. Changed from a
	  mishmash of short/ushort/whatever originally defined, corrected to
	  byte/short/ushort/etc.
	* filesys/IDataSource.h: Cleanup/warning.
	* misc/pent_include.h: A couple of useful CANT_HAPPEN defines.
	* tools/disasm/Disasm.cpp: Minor code cleanup.
	* tools/fold/*: Code reorgnising to make it a bit more compatable with
	  a compiler that will hopefully be finished sometime this century.

	* tools/fold/CommonBases.h: Added file forgotten.

2003-04-20  Darke  <darkepaw@users.sf.net>
	* conf/Configuration.cpp, convert/ConvertShape.cpp,
	  convert/ConvertShape.h, filesys/IDataSource.h, filesys/ODataSource.h,
	  filesys/U8Save.cpp, graphics/BaseSoftRenderSurface.cpp,
	  graphics/Shape.cpp, graphics/ShapeFlex.h, graphics/ShapeFrame.cpp,
	  graphics/SoftRenderSurface.cpp, graphics/SoftRenderSurface.inl,
	  graphics/Texture.h, graphics/TextureBitmap.cpp,
	  graphics/TextureTarga.cpp, graphics/XFormBlend.cpp,
	  graphics/XFormBlend.h, gumps/ConsoleGump.cpp, gumps/GameMapGump.cpp,
	  gumps/Gump.h, kernel/DelayProcess.h, misc/Console.cpp,
	  misc/p_dynamic_cast.h, tools/fold/Fold.cpp,
	  tools/shapeconv/ShapeConv.cpp, usecode/UCMachine.cpp,
	  usecode/UCProcess.cpp, world/Item.cpp:
	  Most warnings elminiated and a potential data initilisation bug or
	  two fixed along the way. F33r my static_casts d00dz! *cough* Ahem.

2003-04-14 Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/*: cleaned up globegg code a bit

2003-04-13 Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GameData.*: load globs
	* world/*: globs, globeggs

2003-04-08 Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: minor changes

2003-04-07 Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/*intrinsics.h, usecode/*: intrinsics
	* world/Item.*: added some basic item intrinsics
	* kernel/Object.*: bugfix

2003-04-07 Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/GameData.*: GameData class for storing datafile objects
	* docs/maps.txt: some object count info

2003-04-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/*, kernel/*: added some usecode-call functions
	* Makefile.mingw: set CFLAGS/CC variables

2003-03-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: minor bugfixes
	* Gump.h: add OnTextInput event

2003-03-21  Ryan Nunn <colourles@users.sourceforge.net>
	* kernel/Application.cpp : Added some config related output
	* world/CurrentMap.cpp, world/World.cpp : msvcisms
	* world/Item.* : Some initial interpolation stuff.
	* world/GlobEgg.*, world/actors/Actor.*, world/actors/MainActor.* :
	  p_dynamic_cast stuff
	* gumps/Gump.* : Some changes reflecting extra thought about mouse
	  input handling.

2003-03-16  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Objects.*, world/*: objID stuff
	* world/World.*, kernel/Kernel.*: more memory stats

2003-03-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* filesys/U8Save.*: simple U8Save class to load u8save.000
	* filesys/Flex.*: made Flex more Flexible
	* kernel/Application.cpp: load gamedat files from u8save.000

2003-03-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/GlobEgg.*: stub GlobEgg class
	* world/*: adding some functionality

2003-03-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/CurrentMap.*: CurrentMap class in progress

2003-03-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/actors/*: stub Actor/MainActor classes
	* world/ItemFactory.*: added createActor function
	* world/Map.*, World.*: moved ItemCach loading to World (just for NPCs)

2003-03-09  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/*.*: item loading from fixed/nonfixed (and untested itemcach)
	* world/*.*: test loading all items in all maps from nonfixed.dat
	* filesys/Flex.*: added method to get an object as a BufferDataSource

2003-03-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/World.*: main World class. (Just some comments, for now)

2003-03-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/TypeFlags.*, graphics/ShapeInfo.h: typeflag.dat handling
	* kernel/Application.cpp: load typeflag.dat
	* graphics/MainShapeFlex.*: class for the main shapeflex (u8shapes.flx)
	* world/*: starting some map reading code. (very unfinished)

2003-03-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* */*: minor tweaks/warnings
	* module.mk: added new object files

2003-03-08  Ryan Nunn <colourles@users.sourceforge.net>
	* convert/ConvertShape.*, convert/crusader/ConvertShapeCrusader.*,
	  convert/u8/ConvertShapeU8.* : Fixing a problem with SKF shapes.
	  Improved Auto detection speed. Added second faster, less safe,
	  auto detection function. Tweaking of Pentagram shape format

	* filesys/FileSystem.* : Added option to allow full access to system
	  paths. I did this so the various command line tools wont require
	  virtual paths to be set.

	* filesys/IDataSource.h : Added signed readXS method.

	* graphics/*RenderSurface.* : Moved and renamed SoftRenderSurface to
	  BaseSoftRenderSurface, and renamed U8SoftRenderSurface to
	  SoftRenderSurface. Implemented all shape drawing methods. Commented
	  out some palette stuff that doesn't look like it's going to be used.

	* graphics/SoftRenderSurface.inl : Macro heaven, now with less macros
	  and more comments. Oh, this contains the shape drawing code if you
	  really needed to know.

	* graphics/Palette.*, graphics/PaletteManager.* : Some changes to
	  support xforming.

	* graphics/Shape.*, graphics/ShapeFlex.*, graphics/ShapeFrame.* :
	  Changed things so all the shape formats can be loaded and used.
	  As things currently are, the shape formats will be autodetected.
	  Using shapes converted to the Pentagram Shape Format should be
	  fastest.

	* graphics/XFormBlend.cpp : XFormBlending functions. Only have U8Xform
	  functions at the moment, so Crusader stuff doesn't look correct.

	* gumps/*.* : Some near-stub gump classes. Nothing much here, except a
	  start. Thought I would just commit this.

	* kernel/Application.cpp : Added an 'avatar' to the centre of the
	  screen, as a test.

	* kernel/Object.cpp : Added for p_dynamic_cast support

	* misc/pent_include.h : 2003

	* kernel/Object.*, world/Container.*, world/Item.* : Added
	  p_dynamic_cast support.

	* kernel/Process.*,  usecode/UCMachine.cpp, usecode/UCProcess.* : Also
	  added p_dynamic_cast support here too.

	* tools/shapeconv/ShapeConv.cpp, tools/disasm/Disasm.cpp : Stop filesys
	  from forcing the use of virtual paths.

2003-03-07  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* world/Glob.*, Map.*, ItemFactory.*: some more near-stub classes

2003-03-06  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Object.h: small start of a base usecode object class
	* world/Item.*, world/Container.*: item/container classes

2003-03-03  Max Horn <max@quendi.de>
	* misc/Console.h: work around a bug in Apple's GCC by forcing printf
	  methods to not be inlined.

2003-02-24  Ryan Nunn <colourles@users.sourceforge.net>
	* misc/pent_include.h, misc/p_dynamic_cast.h : Adding p_dynamic_cast
	  stuff. If we use it... we use it. If we don't... it doesn't matter.

2003-02-24  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* bootstrap: don't run automake. Committed the 3 files it generates.

2003-02-23  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* filesys/FileSystem.*: some sanity checks for vpaths
	* kernel/Application.cpp: @ instead of % for vpaths

2003-02-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* filesys/FileSystem.*: added basic virtual path support
	* kernel/Application.*: setup/use virtual paths
	* configure.ac: renamed configure.in to configure.ac

2003-02-08  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* graphics/Palette.*: load palette from datasource
	* graphics/PaletteManager.*: palette manager
	* graphics/ShapeFlex.*: shape flex class

2003-02-07  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/DelayProcess.h: process that waits a number of ticks
	* graphics/Shape.*, graphics/ShapeFrame.*: shape, frame classes
	* graphics/Palette.h: palette struct
	* graphics/*: shape painting
	* usecode/*: minor changes

2003-01-05  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp: pass this pointer to inline processes
	* kernel/Process.cpp: clear 'waiting' list after notifying

2003-01-04  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/*: added waitFor to processes
	* usecode/*: implemented implies

2003-01-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* convert/ConvertShape.h: compile error
	* conf/XMLTree.cpp: allow 0xHEX constants as integers
	* graphics/SoftRenderSurface.h: typo

2003-01-02  Ryan Nunn <colourles@users.sourceforge.net>
	* AUTHORS : Changed my email address

	* conf/XMLTree.cpp : Fixed the infinte loop.

	* convert/ConvertShape.*, convert/crusader/ConvertShapeCrusader.*,
	  convert/u8/ConvertShapeU8.* : Expanded the ConvertShapeFormat
	  structure. Defined a Pentagram shape format. Added ConvertShapeFormat
	  definitions for U8 Gumps/Mouse, U8 SKF Shapes and Crusader
	  Gumps/Mouse. Added function to check if a shape is valid for a
	  particular format.

	* tools/shapeconv/ShapeConv.cpp : Added support for input and output
	  of all formats. Note the new command line params. (ShapeConv is now
	  dependant on Args.cc). Also added support of single shp files. Will
	  automatically assume single shape if the file has a .shp extension.
	  Single shape mode can also be forced by command line param.

2002-12-31  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* convert/ConvertShape.cpp: ignore corrupt frames
	* convert/crusader/ConvertShapeCrusader.cpp: added some comments
	* tools/shapeconv/ShapeConv.cpp: added (unused) function for converting
	non-flex shapefiles

2002-12-31  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: minor cosmetic changes
	* filesys/*: added get_instance()
	* misc/util.*: added. (with to_uppercase function)
	* conf/XMLTree.cc: properly access files through filesystem

2002-12-31  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* conf/*: added Configuration classes
	* kernel/Application.*: create Configuration
	* bootstrap: check for /usr/local/share/aclocal
	* conf/ConfigNode.h: added missing set() function
	* conf/Configuration.h: some comments
	* conf/*: getSubkeys

2002-12-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* module.mk: updated
	* misc/Errors.h: compile error

2002-12-30  Ryan Nunn <colourles@users.sourceforge.net>
	* misc/Errors.h graphics/GraphicsErrors.h : 'Unified' Error Code System

	* graphics/RenderSurface.* : RenderSurface Interface

	* graphics/SoftRenderSurface.* : SoftRenderSurface Implementation of
	  RenderSurface

	* misc/Rect.h : The useful Rect class

	* data/fixedfont.tga : Font for the console

	* graphics/Texture*.*, graphics/MD3_Model.* : Removed dependencies on
	  'old' and stuff I'm yet to commit

	* kernel/Application.* : Added some basic Painting and res setting code

	* kernel/Process.h : Explicitly set 'terminated' to false as you can't
	  assume that all compilers will zero the memory. *cough* I'm looking
	  at you gcc users. *cough*

	* misc/Console.* : Console Drawing

	* misc/pent_include.h : Minor update

	* usecode/UCStack.h : Fixing deleting of const pointers related issue

2002-12-30  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCMachine.cpp: global pointer dereferencing

2002-12-15  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/*: bugfixes
	* kernel/Kernel.cpp: output UCMachine mem.stats on exit
	* usecode/*: indirect push/pop
	* usecode/*: 'for each'

2002-12-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/*: basic call/ret support
	* usecode/*: function return values
	* usecode/*: stringlists
	* usecode/*: basic pointer opcodes, bugfixes
	* kernel/*: rearranged process queue a bit
	* usecode/*: spawn opcode
	* usecode/*: more pointer opcodes, partial spawn inline

2002-12-14  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* filesys/IDataSource.h, usecode/UCStack.h: const changes
	* usecode/*: minor changes
	* filesys/Flex.*: Flex reader
	* usecode/Usecode.h: abstract Usecode class
	* usecode/UsecodeFlex.*: Usecode Flex reader
	* kernel/Application.*: added FileSystem, load eusecode.flx

2002-12-13  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/UCList.h: usecode list
	* usecode/*: more opcodes, minor structure changes
	* kernel/Application: create UCMachine in Application

2002-12-13  Ryan Nunn <colourles@users.sourceforge.net>
	* tools/disasm/Disasm.cpp : Undoing my damage

2002-12-13  Ryan Nunn <colourles@users.sourceforge.net>
	* filesys/ODataSource.h	: Fixing a const problem
	* convert/Convert.h, tools/disasm/Disasm.cpp, tools/fold/CallNodes.cpp,
	  tools/fold/Folder.cpp, tools/fold/IfNode.cpp : MSVC hacks
	* graphics/*.* : General updates (I can't even remember what they are)

2002-12-11  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/*: minor changes
	* usecode/*: continued implementing opcodes
	* usecode/UCMachine.cpp: added some extra opcode notes
	(It won't compile atm because I haven't committed the Usecode class
	yet. Need to decide how to cache and/or store usecode.)

2002-12-10  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* usecode/*: starting on usecode machine
	* filesys/IDataSource.h: added IBufferDataSource
	* kernel/*.h: minor changes
	* misc/pent_include.h: #include <cassert.h>

2002-12-09  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* kernel/Kernel.*, Process.h: basic kernel classes
	* pentagram.cpp, kernel/Application.*: very basic application classes
	* various: updated build system for above
	* docs/u8anim.txt: some new insights (attack-related)

2002-12-04  Darke  <darkepaw@users.sf.net>
	* configure.in: Removed 'Is this Pentagram' flag; added dancer's
	  mmx/3dnow flags from exult's configure.in; added profiling options.
	* FAQ, docs/scratch/quotes.txt: updated.
	* convert/ConvertShape.*, convert/u8/ConvertShapeU8.h,
	  misc/Q_strcasecmp.*, tools/shapeconv/ShapeConv.cpp: Code tidying.
	* convert/Convert.h, convert/crusader/ConvertUsecodeCrusader.h,
	  convert/u8/ConvertUsecodeU8.h2:
	  Shuffled usecode parsing from disasm to them.
	* filesys/ODataSource.h: Added basic and somewhat b0rk3n OBufferSource.
	* filesys/IDataSource.h: Added correct #include.
	* misc/Console.h: fixed typedefs.
	* tools/disasm/Disasm.cpp: Split read opcode, from write opcode and
	  moved write opcode to convert/Convert.h.
	* tools/disasm/module.mk, module.mk, tools/fold/module.mk: Updated for
	  fold.
	* tools/fold: Added kinda-working decompiler. Yay!

2002-11-04  Darke  <darkepaw@users.sf.net>
	* convert/u8/ConvertUsecodeU8.h: Tidying function names.
	* filesys/ODataSource.h: Fixed compiler error.
	* misc/Console.h: Fixed 'nother compiler error.
	* tools/disasm/Disasm.cpp: Being pedantic.

	* misc/Console.h: Fixed a fix, that wasn't a fix.

2002-11-04  Ryan Nunn <colourles@users.sourceforge.net>
	* misc/Console.* : Added methods for Console output redirection and
	  flags to enable/disable output to stdout and stderr. Added printf()
	  methods to pout and perr. Added vPrintf() methods to Console.

2002-11-03  Ryan Nunn <colourles@users.sourceforge.net>
	* misc/Console.h: fixed endlines appearing out-of-order

2002-11-02  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* tools/disasm/module.mk: removed weird -I flag
	* Makefile.in: we don't have headers/ anymore
	* Makefile.in, bootstrap, tools/shapeconv/module.mk: build shapeconv
	* filesys/IDataSource.h: #include <fstream>
	* tools/shapeconv/ShapeConv.cpp: std::endl
	* various: added convert/u8 convert/crusader to modules list

2002-11-01  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* Makefile.in: tweaked dependency generation a bit

2002-11-01  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* */module.mk: changed .cc to .cpp

2002-10-31  Max Horn <max@quendi.de>
	* bootstrap: changed to be POSIX compliant (and work on OS X)
	* configure.in: cleaned up OS X section
	* misc/Console.h: changed to allow compilation on OS X

2002-10-31  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* bootstrap: removed Makefiles from convert/u8 convert/crusader
	* configure.in: removed kmid, fixed some cosmetic errors

2002-10-31  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* various: added some .cvsignore files
	* bootstrap: generate Makefiles automatically with proper relative path
	* genrules.pl: fixed typo

2002-10-30  Ryan Nunn <colourles@users.sourceforge.net>
	* convert/ConvertShape.*,  tools/shapeconv/ShapeConv.cpp : Fixing a few
	  shape conversion problems

	* tools/amf2mod/amf2mod.c : A simple Crusader AMF to MOD converter that
	  I found. Source should be platform portable.

2002-10-29  Ryan Nunn <colourles@users.sourceforge.net>
	* filesys/FileSystem.cpp : The functions will no longer throw
	  exceptions

	* misc/Console.* : Word Wrapping can now be toggled (not that the
	  feature is that useful currently). cour and cerr will now also be
	  word wrapped.

	* tools/shapeconv/ShapeConv.cpp : Correcting (my own) misuse of printf
	  instead of con.Printf().

2002-10-28  Ryan Nunn <colourles@users.sourceforge.net>
	* convert/ConvertShape.*, convert/crusader/ConvertShapeCrusader.*
	  convert/crusader/ConvertShapeCrusader.* : Shape Conversion

	* filesys/IDataSource.h : Added a few new read methods (read3 and
	  readX)

	* filesys/FileSystem.h, filesys\ODataSource.h : Added ODataSource

	* tools/shapeconv/ShapeConv.cpp : Crusader<->Ultima8 Shape flex
	  converter

2002-10-27  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* misc/Console.cpp: #include <cstdarg>
	* misc/Q_strcasecmp.cpp: case mismatch
	* tools/disasm/module.mk: added Console.o, Q_strcasecmp.o

2002-10-27  Ryan Nunn <colourles@users.sourceforge.net>
	* misc/Console.h : Output Console

	* graphics/MD3_Model.*, graphics/TextureBitmap.cpp, misc/Args.cpp
	  misc/pent_include.h, convert/crusader/ConvertUsecodeCrusader.h,
	  tools/disasm/Disasm.cpp, convert/u8/ConvertUsecodeU8.h :
	  Changes to use Output Console functions/streams instead  of standard
	  outout functions/streams

2002-10-26  Ryan Nunn <colourles@users.sourceforge.net>
	* tools/disasm/Disasm.cpp : Autodetect gametype. Improved u8 function
	  name printing.

2002-10-26  Ryan Nunn <colourles@users.sourceforge.net>
	* Q_strcasecmp.* : Portable case insensitive compare from Quake 2
	* tools/disasm/Disasm.cpp : use Q_strcasecmp() instead of stricmp()

2002-10-26  Ryan Nunn <colourles@users.sourceforge.net>
	* misc/pent_include.* : File to the included at the top of every
	  source file (this is not an option, it must be included). It will
	  include config.h. It will also include common_type.h and define some
	  useful things. It can double as a pre-compiled header for those
	  systems that support it.

	* misc/common_types.h : Removed some stuff and put them in
	  pent_include.h

	* misc/Args.cpp, filesys/FileSystem.cpp : Include pent_include.h

	* filesys/IDataSource.h: : Fixing a few virtual function issues

	* convert/Convert.h,  convert/crusader/ConvertUsecodeCrusader.h,
	  convert/u8/ConvertUsecodeU8.h : Changes for TGWDS

	* tools/disasm/Disasm.cpp : Getting to compile in MSVC. Changes for
	  TGWDS. Added some loopscript stuff

2002-10-07  Ryan Nunn <colourles@users.sourceforge.net>
	* graphics/ : Pretty obvious what this is for, but don't expect
	  anything in there to work quite yet. Files are missing
	* graphics/Texture*.* : Some basic 32 bit Texture classes.
	* graphics/MD3_Model.* : Classes to load and use MD3 models.
	* ChangeLog : Changed my email address

2002-09-22  Darke  <darkepaw@users.sf.net>
	* convert/crusader/ConvertUsecodeCrusader.h, filesys/FileSystem.h,
	  tools/disasm/Disasm.cpp: Docs & code cleanup.

2002-09-22  Darke  <darkepaw@users.sf.net>
	* convert/*,tools/disasm/*: Moved more of the game specific usecode
	  handling to convert; Fixed up a couple of the opcode's docs.

2002-09-22  Darke  <darkepaw@users.sf.net>
	* misc/[Aa]rgs.*: Missed changing a header name.
	* filesys/*: All the file systems stuff. The primary FileSystem class
	  is rather bare and not completely correct, but good enough to use
	  it's basic features.
	* tools/disasm/*: Updated disasm to use the new DataSource classes.


2002-09-08  Darke  <darkepaw@users.sf.net>
	* tools/disasm/Disasm.cpp: All opcodes known, yay! Now we just have
	to figure out how they work. *grin*

2002-08-31  Darke  <darkepaw@users.sf.net>
	* various: filename changes from .cc to .cpp so that VisualC++ can wrap
	  it's poor little mind around them. *grin*

2002-08-26  Darke  <darkepaw@users.sf.net>
	* convert/, tools/disasm/, misc/args.*: type cleanup and abstraction.

2002-08-25  Darke  <darkepaw@users.sf.net>
	* *: Added the makefile system, a few docs, and the required files to
	  compile disasm.cc. Hopefully it works, although I expect it not to.
	  *grin*

2002-08-06  Ryan Nunn <colourles@users.sourceforge.net>
	* docs/musicflx.txt : Updated info about one of the flex entries

2002-05-22  Ryan Nunn <colourles@users.sourceforge.net>
	* docs/design/classes.txt : Added some more classes. Added more details
	  about the functions of various classes. Corrected a few errors with
	  some of the classes.

2002-05-22  Ryan Nunn <colourles@users.sourceforge.net>
	* docs/u8skf.txt : Some initial work on decoding the skf files. Is a
	  work in progress
	* docs/design/classes.txt : Some proposed classes for Pentagram. Work
	  in progress.

2002-05-22  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* docs/*: imported docs/ directory

2002-05-21  Willem Jan Palenstijn <wjpalenstijn@users.sourceforge.net>
	* Started new pentagram CVS repository
